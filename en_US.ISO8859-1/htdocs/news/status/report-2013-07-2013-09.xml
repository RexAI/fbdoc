<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE report PUBLIC "-//FreeBSD//DTD FreeBSD XML Database for Status Report//EN" "http://www.FreeBSD.org/XML/share/xml/statusreport.dtd" >
<!-- $FreeBSD$ -->
<report>
  <date>
    <month>July-September</month>

    <year>2013</year>
  </date>

  <section>
    <title>Introduction</title>

    <p>This report covers &os;-related projects between July and
      September 2013.  This is the third of four reports planned for
      2013.</p>

    <p>We have had another very active three months in the &os; world,
      including two Developer Summits (BSDCam and EuroBSDcon) that will be
      covered in separate status reports.  &os; continues to push hard
      on security, with improvements to both the performance and
      reliability of the random number generation, and more
      compartmentalisation in programs in the base system.  For
      developers, there is work on a new modern debugger.  There is also
      a significant amount of of modernization in the support for
      Objective-C and Ada via ports, making &os; a first-rate platform
      for developing in either language, in addition to the existing
      C++11 and C11 support already present in the base system.  Server
      users will be pleased to see improvements in the iSCSI stack and
      scalability allowing over a million I/O operations per second on
      commodity hardware, while desktop users will see improvements in X
      support for new GPUs and for possible X replacements.</p>

    <p>Thanks to all the reporters for the excellent work!  This report
      contains 30 entries and we hope you enjoy reading it.</p>

    <p>The deadline for submissions covering between October and
      December 2013 is January 14th, 2014.</p>
  </section>

  <category>
    <name>team</name>

    <description>&os; Team Reports</description>
  </category>

  <category>
    <name>proj</name>

    <description>Projects</description>
  </category>

  <category>
    <name>kern</name>

    <description>Kernel</description>
  </category>

  <category>
    <name>arch</name>

    <description>Architectures</description>
  </category>

  <category>
    <name>bin</name>

    <description>Userland Programs</description>
  </category>

  <category>
    <name>ports</name>

    <description>Ports</description>
  </category>

  <category>
    <name>doc</name>

    <description>Documentation</description>
  </category>

  <category>
    <name>soc</name>

    <description>Google Summer of Code</description>
  </category>

  <category>
    <name>misc</name>

    <description>Miscellaneous</description>
  </category>

  <project cat='kern'>
    <title>AES-NI Improvements for GELI</title>

    <contact>
      <person>
	<name>
	  <given>John-Mark</given>
	  <common>Gurney</common>
	</name>
	<email>jmg@FreeBSD.org</email>
      </person>
    </contact>

    <links>
      <url href="http://svnweb.freebsd.org/changeset/base/255187"/>
    </links>

    <body>
      <p>An enhancement to the AES-NI implementation for OpenCrypto, the
	kernel's cryptography framework, has been committed that
	significantly improves AES-XTS and AES-CBC decryption
	performance.  This gives <tt>geli(8)</tt> around a three times
	performance boost on <tt>gnop(8)</tt> using AES-XTS compared to
	the old code.</p>

      <p>These improvements are available to users of the OpenCrypto
	framework and <tt>crypto(4)</tt>.</p>
    </body>
  </project>

  <project cat='proj'>
    <title>Static Code Analysis</title>

    <contact>
      <person>
	<name>
	  <given>Ulrich</given>
	  <common>Spoerlein</common>
	</name>
	<email>uqs@FreeBSD.org</email>
      </person>
    </contact>

    <links>
      <url href="http://scan.coverity.com/">Coverity Scan</url>
      <url href="http://scan.freebsd.your.org/">Clang Static Analyzer Scan for &os;</url>
      <url href="http://clang-analyzer.llvm.org/">Clang Static Analyzer Home Page</url>
    </links>

    <body>
      <p>With our own (old and unstable) instance of Coverity Prevent
	gone, we have now fully transitioned to the Scan project run by
	Coverity (see links), which Open Source projects can use to
	learn about possible defects in their source code.</p>

      <p>We also continue to run our code base through the Static
	Analyzer that is shipped with Clang/LLVM.  It cannot track the
	state of the code over time, but has the benefit that everyone
	can use it without any special setup.  See the home page at the
	links section for more information on the Clang Static Analyzer
	project in general, and head over to the &os; Clang Static
	Analyzer Scan page (see links) to see those possible defects (no
	signup required).</p>

      <p>We are looking for a co-admin for both of these projects to
	increase the bus-factor and the chance of survival for these
	services.  Fame and fortune await!</p>
    </body>

    <help>
      <task>Maybe turn on email reports for new defects to the internal
	list of &os; developers.</task>

      <task>Find co-admin.</task>

      <task>Fix the defects reported by Coverity and Clang.</task>
    </help>
  </project>

  <project cat='kern'>
    <title>GEOM Direct Dispatch and Fine-Grained CAM Locking</title>

    <contact>
      <person>
	<name>
	  <given>Alexander</given>
	  <common>Motin</common>
	</name>
	<email>mav@FreeBSD.org</email>
      </person>
    </contact>

    <links>
      <url href="http://svnweb.freebsd.org/base/projects/camlock/">Project SVN branch</url>
      <url href="http://people.freebsd.org/~mav/camlock_patches/">Project patches</url>
    </links>

    <body>
      <p>Last year's high-performance storage vendor summit reported a
	performance bottleneck in the &os; block storage subsystem,
	limiting peak performance to around 300-500K IOPS.  While that
	is still more than enough for average systems, detailed
	investigation has shown a number of places that require radical
	improvement.  The unmapped I/O support implemented early this
	year has already improved I/O performance by about 30% and moved
	more focus toward GEOM and CAM subsystems scalability.  Fixing
	these issues was the goal of this project.</p>

      <p>The existing GEOM design assumed most I/O handling was to be
	done by only two kernel threads (<tt>g_up()</tt> and
	<tt>g_down()</tt>).  That simplified locking in some cases, but
	limited potential SMP scalability and created additional
	scheduler overhead.  This project introduces the concept of
	direct I/O dispatch into GEOM for cases where it is known to be
	safe and efficient.  That implies marking some GEOM consumers
	and providers with one or two new flags, declaring situations
	when a direct function call can be used instead of normal
	request queuing.  That permits avoiding any context switches
	inside GEOM for the most widely used topologies, simultaneously
	processing multiple I/Os from multiple calling threads.</p>

      <p>Having GEOM pass through multiple concurrent calls down to the
	underlying layers exposed major lock congestion in CAM.  In the
	existing CAM design, all devices connected to the same ATA/SCSI
	controller share a single lock, which can be quite busy due to
	multiple controller hardware accesses and/or code logic.
	Experiments have shown that applying only the above GEOM direct
	dispatch changes burns up to 60% of system CPU time or even more
	in attempts to obtain these locks by multiple callers, killing
	any benefits of GEOM direct dispatch.</p>
	
      <p>To overcome this scaling limitation, a new fine-grained CAM
	locking design was implemented.  It implies splitting the big
	per-SIM locks into several smaller ones: per-LUN locks, per-bus
	locks, queue locks, etc.  After these changes, the remaining
	per-SIM lock protects only the controller driver internals,
	reducing lock congestion down to an acceptable level and keeping
	compatibility with existing drivers.</p>

      <p>Together, the GEOM and CAM changes double the peak I/O rate,
	reaching up to 1,000,000 IOPS on contemporary hardware.</p>

      <p>The changes were tested by a number of people and will be
	committed into &os; <tt>head</tt> and merged to
	<tt>stable/10</tt> after the end of the &os; 10.0 release
	cycle.</p>

      <p>The project is sponsored by iXsystems, Inc.</p>
    </body>

    <help>
      <task>More reviews, more stability and performance tests.</task>
    </help>
  </project>

  <project cat='kern'>
    <title>VMware VMXNET3 Driver</title>

    <contact>
      <person>
	<name>
	  <given>Bryan</given>
	  <common>Venteicher</common>
	</name>
	<email>bryanv@freebsd.org</email>
      </person>
    </contact>

    <links>
      <url href="http://lists.freebsd.org/pipermail/freebsd-current/2013-August/043494.html"/>
      <url href="http://svnweb.freebsd.org/base/head/sys/dev/vmware/vmxnet3/"/>
    </links>

    <body>
      <p>A port of the OpenBSD <tt>vmx(4)</tt> ethernet driver for
	VMware virtual machines has been committed.  The driver can be
	used in place of the VMware Tools <tt>vmxnet3</tt> driver, which
	currently does not support 10.0-RELEASE (or anything past
	9.0-RELEASE).</p>
    </body>

    <help>
      <task>Performance improvements, multiqueue support.</task>
      <task>Merge to <tt>stable/9</tt>.</task>
    </help>
  </project>

  <project cat='kern'>
    <title>VirtIO Network Multiqueue</title>

    <contact>
      <person>
	<name>
	  <given>Bryan</given>
	  <common>Venteicher</common>
	</name>
	<email>bryanv@freebsd.org</email>
      </person>
    </contact>

    <links>
      <url href="http://svnweb.freebsd.org/changeset/base/255112"/>
    </links>

    <body>
      <p>The VirtIO network driver, <tt>vtnet(4)</tt>, is used by &os;
	systems running on hypervisors including <tt>bhyve(4)</tt> and
	Linux's KVM.  It recently gained support for multiple queues,
	along with a significant cleanup and support for a few
	additional features.</p>
    </body>
  </project>

  <project cat='ports'>
    <title>&os; Python Ports</title>

    <contact>
      <person>
	<name>
	  <given>&os;</given>
	  <common>Python Team</common>
	</name>
	<email>python@FreeBSD.org</email>
      </person>
    </contact>

    <links>
      <url href="https://wiki.FreeBSD.org/Python">The &os; Python Team Page</url>
      <url href="irc://freebsd-python@irc.freenode.net">IRC channel</url>
    </links>

    <body>
      <p>We are currently working on cleaning up the
	<tt>lang/python*</tt> ports to improve their compatibility with
	the original upstream build behaviour and to reduce the need for
	&os;-specific build patches.  A first step was made in September
	by reducing the flags injected into the different Python
	interpreter versions.</p>

      <p>The first tasks have been completed to support the installation
	of packages for different Python ports.  A new metaport structure
	has replaced the original Python port behaviour, and will be
	enhanced over the next months to enable improved installation
	support of packages for different Python versions at the same
	time.</p>

      <p>The Python ports framework was enhanced with automated
	packaging list creation and replacement macros, which improve the
	compatibility with multiple Python versions and reduce the
	packaging list sizes.</p>

      <p>PyPy was heavily enhanced over the last couple of months.
	Major updates to the port solved integration issues and a new
	<tt>pypy-devel</tt> port for snapshots and previews was added.
	Since the PyPy&nbsp;3 release, there is a new
	<tt>pypy3-devel</tt> port available to provide not only
	compatibility for Python&nbsp;2.x specific scripts, but also for
	those using the 3.x language specification.</p>

      <p>IronPython found its way into the &os; ports tree, providing an
	implementation of the Python language based on .NET and
	Mono.</p>
    </body>

    <help>
      <task>Develop a high-level and lightweight Python Ports
	Policy.</task>

      <task>Chase the unification of Distribute
	(<tt>devel/py-distribute</tt>) and Setuptools
	(<tt>devel/py-setuptools*</tt>).</task>

      <task>Add support for granular dependencies (for example
	<tt>>=1.0</tt> or <tt>&lt; 2.0</tt>).</task>

      <task>Look at what adding <tt>pip</tt> (Python Package Index)
	support looks like.</task>

      <task>More tasks can be found on the Team's wiki page (see
	links).</task>
    </help>
  </project>

  <project cat='doc'>
    <title>The <tt>entities</tt> Documentation Branch</title>

    <contact>
      <person>
	<name>
	  <given>René</given>
	  <common>Ladan</common>
	</name>
	<email>rene@FreeBSD.org</email>
      </person>
    </contact>

    <links>
      <url href="http://svnweb.freebsd.org/changeset/doc/42226"/>
    </links>

    <body>
      <p>The <tt>entities</tt> project branch has been successfully
	merged into the main documentation branch per revision 42226 of
	the <tt>doc</tt> repository (see link).  The purpose of this
	branch was to remove the duplicated definitions of authors in
	both <tt>authors.ent</tt> and <tt>developers.ent</tt>.  The
	latter file has been removed after migrating its contents to the
	former file.  While most changes are not visible to end users,
	the Committer's Guide was changed to accomodate for changes
	related to adding a new committer.  Translators were also
	informed of the update.  The largest hurdle mentioned in the
	last report, processing the <tt>&lt;email&gt;</tt> element, was
	solved with the help of Gábor Kövesdán.</p>
    </body>
  </project>

  <project cat='team'>
    <title>&os; Release Engineering Team</title>

    <contact>
      <person>
	<name>&os; Release Engineering Team</name>
	<email>re@FreeBSD.org</email>
      </person>
    </contact>

    <links>
      <url href="http://www.FreeBSD.org/releases/9.2R/schedule.html">&os;&nbsp;9.2-RELEASE schedule</url>
      <url href="http://www.FreeBSD.org/releases/10.0R/schedule.html">&os;&nbsp;10.0-RELEASE schedule</url>
      <url href="http://ftp.FreeBSD.org/pub/FreeBSD/snapshots/VM-IMAGES/">&os;&nbsp;Virtual Machine Images</url>
      <url href="http://ftp.FreeBSD.org/pub/FreeBSD/snapshots/ISO-IMAGES/">&os;&nbsp;Development Snapshots</url>
    </links>

    <body>
      <p>The &os; Release Engineering Team has completed the 9.2-RELEASE
	process.  The release cycle changed with a last-minute addition
	of 9.2-RC4.  The 9.2-RELEASE was announced September 30, four
	weeks behind the original schedule.</p>

      <p>The &os;&nbsp;10.0-RELEASE cycle has started, and testing is
	strongly encouraged.  For testing purposes, both installation
	images and virtual machine images exist on the &os;&nbsp;Project
	FTP servers.</p>
    </body>

    <help>
      <task>Test 10.0-CURRENT and report problems.</task>
    </help>
  </project>

  <project cat='soc'>
    <title>Download Manager Service for the Ports Collection</title>

    <contact>
      <person>
	<name>
	  <given>Ambarisha</given>
	  <common>Bhatlapenumarthi</common>
	</name>
	<email>ambarisha@freebsd.org</email>
      </person>

      <person>
	<name>
	  <given>Xin</given>
	  <common>Li</common>
	</name>
	<email>delphij@freebsd.org</email>
      </person>
    </contact>

    <links>
      <url href="https://wiki.freebsd.org/SummerOfCode2013/IntellegentDownloadManager">Project wiki page</url>
      <url href="https://wiki.freebsd.org/IdeasPage/IDMS">More information on DMS</url>
    </links>

    <body>
      <p>This is a Google Summer of Code 2013 project that aims to
	replace the <tt>fetch(1)</tt>-based method for getting
	distribution files, such as source tarballs, for the third-party
	applications (ports) with an intelligent Download Manager
	Service (see links for more information).</p>

      <p>All the modules highlighted in the project wiki have been
	completed (see links).  Specifically:</p>

      <ul>
	<li>A service that receives and serves download requests.  It
	  samples download speeds from different mirrors and uses this
	  information to pick the best mirror on the next request.  It
	  can migrate jobs between mirrors if it realizes that a
	  complete download from a different mirror would be faster than
	  proceeding with the mirror it is currently using.</li>

	<li>A status dump feature has also been added to the client
	  (<tt>dmget</tt>) which dumps the information about active
	  downloads, speeds from mirrors, etc.</li>
      </ul>
    </body>

    <help>
      <task>The implementation (especially job migration and dumping
	status) has not been tested thoroughly.  Test the code, write more
	unit and regression tests.</task>
    </help>
  </project>

  <project cat='ports'>
    <title>&os; Ada Ports</title>

    <contact>
      <person>
	<name>
	  <given>John</given>
	  <common>Marino</common>
	</name>
	<email>marino@FreeBSD.org</email>
      </person>
    </contact>

    <links>
      <url href="http://www.dragonlace.net"/>
    </links>

    <body>
      <p>A few years ago, Ada-based ports almost completely disappeared
	from the Ports Collection.  This was not surprising, as
	FSF&nbsp;GNAT, the only open-source Ada compiler, ceased to
	build correctly on any BSD flavor.  Previously-built bootstrap
	compilers would not run on modern &os;, and certainly not on
	amd64.  The first step, see the link for details, was to patch
	GCC in order to fix GNAT not only on &os;, but DragonFly,
	NetBSD, and OpenBSD as well.  New bootstraps for both i386 and
	amd64 platforms were produced during this effort.  Ada compilers
	on &os; now pass 100% of the ACATS and GCC testsuites.</p>

      <p>With the introduction of the first new Ada compiler port, the
	GCC&nbsp;4.6-based <tt>lang/gnat-aux</tt>, the GNAT Programming
	Studio (a multilanguage integrated development environment),
	XML/Ada, and GtkAda were among the first Ada ports
	resurrected.</p>

      <p>With the latest compiler, <tt>lang/gcc-aux</tt> based on GCC
	4.7, a cohesive Ada framework was created with the new
	<tt>USES=</tt> framework.  Currently around 20 ports are part of
	this framework including Florist, ASIS, GPRbuild, QtAda,
	AdaControl, AdaBrowse, PolyOrb, and AWS (Ada Web Server).</p>

      <p>The GNAT AUX compiler is also still in use to serve as a basis
	for the GNATDroid ports which are &os;-to-Android Ada+C cross-compilers.
	However, these will soon be integrated into the Ada Framework.</p>

      <p>At this point, it looks like &os; (shared with DragonFly via
	DPorts) has taken the crown from Debian as the recognized best
	Ada development platform.  The &os; versions of the software are
	more recent and the Ports Collection has ports not available on
	Debian, such as LibSparkCrypto, the Matreshka library, and the
	Ahven unit tester.</p>

      <p>Future work potentially includes converting GCC AUX to
	GCC&nbsp;4.8 to acquire better Ada&nbsp;2012 support, importing
	Spark&nbsp;2014 into ports when it arrives and to continue to
	add new Ada ports to the framework.</p>
    </body>
  </project>

  <project cat='arch'>
    <title>&os; on Cubieboard2</title>

    <contact>
      <person>
	<name>
	  <given>Ganbold</given>
	  <common>Tsagaankhuu</common>
	</name>
	<email>ganbold@FreeBSD.org</email>
      </person>
    </contact>

    <links>
      <url href="http://svnweb.freebsd.org/changeset/base/254056"/>
    </links>

    <body>
      <p>Initial support of Allwinner A20 SoC is committed to
	<tt>head</tt>.  The A20 SoC on Cubieboard2 is pin-to-pin
	compatible with the A10 in Cubieboard1 and &os; supports the
	following peripherals:</p>

      <ul>
	<li>USB EHCI</li>
	<li>GPIO</li>
      </ul>
    </body>

    <help>
      <task>Get the EMAC Ethernet driver working.  Need more help from
	network driver experts.</task>

      <task>Add more drivers.</task>
    </help>
  </project>

  <project cat='arch'>
    <title>&os;/EC2</title>

    <contact>
      <person>
	<name>
	  <given>Colin</given>
	  <common>Percival</common>
	</name>
	<email>cperciva@freebsd.org</email>
      </person>
    </contact>

    <links>
      <url href="http://www.daemonology.net/freebsd-on-ec2/">&os;/EC2 Status Page</url>
      <url href="https://aws.amazon.com/marketplace/pp/B00AA25MLK/">AWS Marketplace Listing</url>
    </links>

    <body>
      <p>&os; images are available for use in EC2 for 8.3-RELEASE,
	8.4-RELEASE, 9.0-RELEASE, 9.1-RELEASE, and 9.2-RELEASE.  In
	9.2-RELEASE, &os; runs in EC2 using an unpatched source tree,
	but it needs the <tt>XENHVM</tt> kernel configuration.</p>

      <p>Starting from &os; 10.0-ALPHA3, the <tt>GENERIC</tt> kernel
	configuration now contains all the <tt>XENHVM</tt> bits needed
	to allow &os; to run in EC2 natively.  Consequently,
	&os;&nbsp;10.0 will be the first release for which &os;/EC2 is
	purely "bits off the ISO".  This also means that starting with
	10.0 it will be possible to use <tt>freebsd-update(8)</tt> for
	all base system updates &mdash; in earlier releases it was
	necessary to recompile the <tt>XENHVM</tt> kernel manually.</p>

      <p>Due to &os;'s use of HVM virtualization, running on "old" EC2
	instance types (m1, m2, c1, t1) requires that &os; pretends to
	be Windows, which unfortunately results in paying the higher
	"windows" EC2 instance prices.  On "new" EC2 instances (cc1,
	cc2, cg1, cr1, hi1, hs1, and m3) &os; can run as a "unix" image
	at the lower rate.</p>
    </body>

    <help>
      <task>Test &os; 10.0-ALPHAs/BETAs/RCs as they become available.
	Plenty of new Xen code has been committed recently and there are
	probably bugs to find before the release.</task>

      <task>Keep nagging Amazon to provide more instance types which
	&os; can run on without paying a "Windows tax".</task>

      <task>Provide some mechanism for instance configuration via EC2
	<tt>user-data</tt>.  This might involve using
	<tt>cloud-init</tt>, or it might be a new system.</task>
    </help>
  </project>

  <project cat='team'>
    <title>&os; Postmaster Team</title>

    <contact>
      <person>
	<name>&os; Postmaster Team</name>
	<email>postmaster@FreeBSD.org</email>
      </person>
    </contact>

    <links>
      <url href="http://lists.freebsd.org/mailman/listinfo/freebsd-fortran"/>
      <url href="http://lists.freebsd.org/mailman/listinfo/freebsd-pkg-fallout"/>
      <url href="http://lists.freebsd.org/mailman/listinfo/freebsd-users-jp"/>
    </links>

    <body>
      <p>In the third quarter of 2013, the &os; Postmaster Team has
	implemented the following items that may be interest of the
	general public:</p>

      <ul>
	<li>Created the <tt>freebsd-fortran</tt> list, requested by Anton Shterenlikht.</li>

	<li>Created the <tt>freebsd-pkg-fallout</tt> list, requested by
	  Baptiste Daroussin.</li>

	<li>Created the <tt>freebsd-users-jp</tt> list, requested by Hiroki
	  Sato</li>

	<li>Retired the <tt>freebsd-mozilla</tt> list, requested by Florian
	  Smeets.</li>

	<li>Worked with the &os; Cluster Administrators to enable TLS
	  support on incoming and outgoing mail servers.</li>

	<li>Started discussions and exploration of current and possible
	  future mail and spam filtering.</li>

	<li>Started the process for retiring the <tt>aic7xxx</tt>
	  mailing list.  Completion of this is scheduled for 12 October
	  2013.</li>
      </ul>
    </body>
  </project>

  <project cat='arch'>
    <title>Superpages for ARMv7</title>

    <contact>
      <person>
	<name>
	  <given>Zbigniew</given>
	  <common>Bodek</common>
	</name>
	<email>zbb@semihalf.com</email>
      </person>

      <person>
	<name>
	  <given>Grzegorz</given>
	  <common>Bernacki</common>
	</name>
	<email>gjb@semihalf.com</email>
      </person>

      <person>
	<name>
	  <given>Rafał</given>
	  <common>Jaworowski</common>
	</name>
	<email>raj@semihalf.com</email>
      </person>
    </contact>

    <links>
      <url href="http://static.usenix.org/events/osdi02/tech/full_papers/navarro/navarro.pdf" />
      <url href="http://wiki.freebsd.org/ARMSuperpages" />
      <url href="http://blogs.arm.com/software-enablement/1079-transparent-superpages-for-freebsd-on-arm" />
      <url href="https://wiki.freebsd.org/201309DevSummit?action=AttachFile&amp;do=view&amp;target=semihalf-superpages_armv7.pdf" />
      <url href="http://svnweb.freebsd.org/changeset/base/254918" />
    </links>

    <body>
      <p>The ARM architecture is becoming more and more prevalent, with
	increasing usage beyond the mobile and embedded space.  Among
	the more interesting industry trends emerging in the recent
	months, there has been the concept of "ARM server".  Top-tier
	companies like Dell and HP have already started to develop such
	systems.</p>

      <p>Key to the success of &os; in these new areas is dealing with
	the sophisticated features of the platform, for example adding
	support for superpages.</p>

      <p>The objective of this project is to enable &os;/arm to utilize
	superpages, allowing efficient use of TLB translations (by
	enlarging TLB coverage), leading to improved performance in many
	applications and scalability.  This is intended to work on
	ARMv7-based processors, however compatibility with ARMv6 will be
	preserved.</p>

      <p>The following steps have been made since the last status
	report:</p>

      <ul>
	<li>The <tt>pmap(9)</tt> module has been adjusted to fully
	  utilize superpages.</li>

	<li>Found and fixed minor bugs in superpage management.</li>

	<li>Implemented the <tt>pmap_advise()</tt> routine.</li>

	<li>Performed extensive testing and benchmarking:

	  <ul>
	    <li>Giga Updates Per Second (GUPS) benchmark: 34% lower memory access
	      latency and 34% higher updates ratio.</li>

	    <li>LMbench: 38% lower memory latency.</li>

	    <li>Self-hosted <tt>buildworld</tt>: 20% shorter, using GCC.</li>
	  </ul></li>

	<li>Final integration into &os; <tt>head</tt>.</li>
      </ul>

      <p>This project is jointly sponsored by The &os; Foundation and
	Semihalf.</p>
    </body>

    <help>
      <task>Adjust <tt>pmap</tt> to resolve the demotion issue caused by
	the continuous active queue scanning in VM.</task>

      <task>Support for 64KB page size.</task>

      <task>Move <tt>pv_flags</tt> to page table entry descriptors.</task>
    </help>
  </project>

  <project cat='arch'>
    <title>&os;/pseries</title>

    <contact>
      <person>
	<name>
	  <given>Andreas</given>
	  <common>Tobler</common>
	</name>
	<email>andreast@freebsd.org</email>
      </person>

      <person>
	<name>
	  <given>Nathan</given>
	  <common>Whitehorn</common>
	</name>
	<email>nwhitehorn@freebsd.org</email>
      </person>
    </contact>

    <links>
      <url href="http://svnweb.freebsd.org/changeset/base/255643"/>
    </links>

    <body>
      <p>Starting with &os; 10.0-ALPHA4, the <tt>projects/pseries</tt>
	branch has been merged into &os; <tt>head</tt>.  This allows
	&os;/powerpc64 to run in an IBM POWER logical partition and on
	certain classes of older IBM-type PowerPC hardware.</p>
    </body>

    <help>
      <task>Test, possibly on real hardware.  Most testing and
	development was conducted with the emulated LPAR target in QEMU.
	Please send any testing reports to the <tt>freebsd-ppc</tt>
	mailing list.</task>
    </help>
  </project>

  <project cat='kern'>
    <title>Native iSCSI Stack</title>

    <contact>
      <person>
	<name>
	  <given>Edward Tomasz</given>
	  <common>Napierała</common>
	</name>
	<email>trasz@FreeBSD.org</email>
      </person>
    </contact>

    <links>
      <url href="https://wiki.freebsd.org/Native%20iSCSI%20target" />
    </links>

    <body>
      <p>Due to the quickly approaching time of 10.0-RELEASE, the
	priorities for the native iSCSI stack shifted somewhat, from
	performance optimizations to making sure the new stack is
	reliable, feature-complete, and is able to interoperate correctly
	with various implementations.  Plenty of time was invested into
	testing and debugging, mostly on the initiator side, to make
	sure it works correctly with other targets, such as Solaris
	COMSTAR, and behaves properly in edge conditions like connection
	problems.  Nevertheless, some fundamental optimizations, such as
	Immediate Data support, were implemented.  The documentation has
	improved, and there will be a new section added to the &os;
	Handbook describing the use of the new stack.</p>

      <p>The new stack was committed to <tt>head</tt> and will ship as
	part of 10.0-RELEASE.  There is ongoing work on fixing issues
	reported by early adopters.</p>

      <p>This project is being sponsored by The &os; Foundation.</p>
    </body>

    <help>
      <task>Fix newly reported issues.</task>
      <task>Improve performance.</task>
    </help>
  </project>

  <project cat='kern'>
    <title>SDIO Driver</title>

    <contact>
      <person>
	<name>
	  <given>Ilya</given>
	  <common>Bakulin</common>
	</name>
	<email>ilya@bakulin.de</email>
      </person>
    </contact>

    <links>
      <url href="https://wiki.freebsd.org/SDIO">SDIO Project Page</url>
      <url href="https://github.com/kibab/freebsd/tree/kibab-dplug">Source Code</url>
    </links>

    <body>
      <p>SDIO is an interface designed as an extension of the existing
	SD card standard, to allow connecting different peripherals to
	the host with the standard SD controller.  Peripherals currently
	sold at the general market include WLAN/BT modules, cameras,
	fingerprint readers, and barcode scanners.  The driver is
	implemented as an extension to the existing MMC bus, adding a
	lot of new SDIO-specific bus methods.  A prototype of the driver
	for the Marvell SDIO WLAN/BT (Avastar 88W8787) module is also
	being developed, using the existing Linux driver as the
	reference.</p>

      <p>SDIO card detection and initialization already work, most
	needed bus methods are implemented and tested.  There is an
	ongoing work to design a good locking model for the stack.  The
	WiFi driver is able to load firmware onto the card and
	initialize it.</p>
    </body>

    <help>
      <task>SDIO stack: Design a locking model, define how the
	interrupts should be processed (on SDIO controller level, MMC
	stack level and by child drivers).</task>

      <task>Marvell SDIO WiFi: connect to the &os; network stack, write
	the code to implement required functions (such as sending and
	receiving data, network scanning, and so on).</task>

      <task>Implement detach path.  It cannot be tested on the DreamPlug
	used for development, because the DreamPlug does not have an
	external SDIO-capable slot.</task>
    </help>
  </project>

  <project cat='kern'>
    <title>Atomic "close-on-exec"</title>

    <contact>
      <person>
	<name>
	  <given>Jilles</given>
	  <common>Tjoelker</common>
	</name>
	<email>jilles@FreeBSD.org</email>
      </person>
    </contact>

    <links>
      <url href="https://wiki.freebsd.org/AtomicCloseOnExec" />
    </links>

    <body>
      <p>If threads or signal handlers call <tt>fork()</tt> and
	<tt>exec()</tt>, file descriptors may be passed undesirably to
	child processes, which may lead to hangs (if a pipe is not
	closed), exceeding the file descriptor limit, and security
	problems (if the child process has lower privilege).  One
	solution is various new APIs that set the "close-on-exec" flag
	atomically with allocating a file descriptor.  Some existing
	software will use the new features if present or will even
	refuse to compile without them.</p>

      <p>With <tt>mkostemp()</tt>, <tt>dup3()</tt>, and a change to
	modes of <tt>fopen()</tt> and <tt>freopen()</tt>, everything
	proposed in Austin Group issue #411 has now been implemented.
	For all POSIX-specified functions that allocate file
	descriptors, it is possible to request that the new descriptor
	be set close-on-exec atomically.</p>

      <p>Additionally, many file descriptors used internally by
	<tt>libc</tt> and <tt>libutil</tt> now have the close-on-exec bit
	set.</p>
    </body>
  </project>

  <project cat='kern'>
    <title>Reworking <tt>random(4)</tt></title>

    <contact>
      <person>
	<name>
	  <given>Mark</given>
	  <common>Murray</common>
	</name>
	<email>markm@freebsd.org</email>
      </person>

      <person>
	<name>
	  <given>Arthur</given>
	  <common>Mesh</common>
	</name>
	<email>arthurmesh@gmail.com</email>
      </person>

      <person>
	<name>
	  <given>Dag-Erling</given>
	  <common>Sm&oslash;rgrav</common>
	</name>
	<email>des@freebsd.org</email>
      </person>
    </contact>

    <body>
      <p>Random numbers require a lot more thought and preparation than
	would naively appear to be the case.  For simulations, number
	sequences that are repeatable but sufficiently disordered are
	often needed to achieve required experimental duplication
	ability, and many programmers are familiar with these.  For
	cryptography, it is essential that an attacker not be able to
	predict or guess the output sequence, thus giving a source of
	security-critical secret material for uses such as passwords or
	"key material".</p>

      <p>&os;'s random number generator, available as the pseudo-file
	<tt>/dev/random</tt> produces unpredictable numbers intended for
	cryptographic use, and is thus a Cryptograpically-Secured
	Pseudo-Random Number Generator, or CSPRNG.  The security is
	given by careful design of the output generator (based on a
	block cipher) and input entropy accumulation queues.  The latter
	uses hashes to accumulate stochastic information harvested from
	various places in the kernel to provide highly unpredictable
	input to the generator.  The algorithm for doing this, Yarrow,
	by Schneier et al, may be found by web search.</p>

      <p>&os;'s CSPRNG also allowed for certain stochastic sources,
	deemed to be "high-quality", to directly supply the
	<tt>random(4)</tt> device without going through Yarrow.  With
	recent revelations over possible government surveillance and
	involvement in the selection of these "high-quality" sources, it
	is felt that they can no longer be trusted, and must therefore
	also be processed though Yarrow.</p>

      <p>The matter was discussed at various levels of formality at the
	Cambridge Developer Summit in August, and at EuroBSDcon 2013 in
	September.</p>

      <p>This work is now done, and the <tt>random(4)</tt> CSPRNG is now
	brought to a more paranoid, modern standard of distrust with
	regard to its entropy sources.  Infrastructure work was also
	done to facilitate certain entropy-source choices for the
	convenience of the system administrators.</p>

      <p>Future work is now going ahead with the implementation of the
	Fortuna algorithm by Ferguson and Schneier as an upgrade or
	alternative to Yarrow.  Initially a choice will be presented,
	and decisions on the future of the CSPRNG processing algorithms
	in use will be made in the future as needs arise.</p>
    </body>

    <help>
      <task>Implement FIPS 800-90b support.</task>
      <task>A full, in-depth review of entropy.</task>
    </help>
  </project>

  <project cat='ports'>
    <title>GNUstep on &os;</title>

    <contact>
      <person>
	<name>
	  <given>David</given>
	  <common>Chisnall</common>
	</name>
	<email>theraven@FreeBSD.org</email>
      </person>
    </contact>

    <body>
      <p>GNUstep is the open source implementation of the Objective-C
	APIs based on the OpenStep specification that Apple brands as
	Cocoa.  The similarities between the &os; and OS&nbsp;X
	<tt>libc</tt> make &os; an attractive target platform for
	porting OS&nbsp;X applications, with the addition of
	GNUstep.</p>

      <p>The GNUstep ports in &os; have now been updated to the latest
	releases and now build with the GNUstep Objective-C runtime and
	Clang 3.3, with the non-fragile ABI by default.  This means that
	all of the modern features of Objective-C are supported,
	including Automatic Reference Counting (ARC) and recent syntax
	improvements.</p>

      <p>The <tt>devel/gnustep</tt> meta-port will install all of the
	core GNUstep libraries, ready for development.  The
	<tt>x11/gnustep-app</tt> meta-port will install all of the
	GNUstep-based applications and libraries currently in the ports
	tree.  Many of these are old and not well-tested with later
	GNUstep release, so consider them experimental at present.
	We are currently working on updating them, including moving from
	some abandoned upstream locations to the GNUstep Applications
	Project (GAP), which has taken over maintenance of a number of
	older GNUstep programs.</p>
    </body>
  </project>

  <project cat='bin'>
    <title>LLDB Debugger Port</title>

    <contact>
      <person>
	<name>
	  <given>Ed</given>
	  <common>Maste</common>
	</name>
	<email>emaste@freebsd.org</email>
      </person>
    </contact>

    <links>
      <url href="https://wiki.freebsd.org/lldb" />
    </links>

    <body>
      <p>LLDB is the debugger project in the LLVM family.  It supports
	the Mac OS X, Linux, and &os; platforms.</p>

      <p>A number of improvements have been made to the port since the
	previous status update.  Unit test failures have been triaged
	and have defects entered in LLDB's bug tracker.  In combination
	with the <tt>lldb</tt> buildbot this allows for the quick
	identification of new failures introduced by other ongoing
	development.  Core file support has also been added.</p>

      <p>An LLDB snapshot has been imported into the &os; base system
	and is available as of SVN revision 255722.  It is not yet built
	by default but may be enabled by adding <tt>WITH_LLDB=</tt> to
	<tt>src.conf(5)</tt>.</p>

      <p>This project is sponsored by DARPA/AFRL in collaboration with SRI
	International and the University of Cambridge.</p>
    </body>

    <help>
      <task>Support live debugging of multithreaded processes.</task>
      <task>Fix amd64 watchpoints.</task>
      <task>Add support for remote debugging (gdbserver,
	debugserver).</task>
      <task>Add support for kernel debugging.</task>
      <task>Verify i386 and arm architectures.</task>
      <task>Implement MIPS target support.</task>
      <task>Verify cross-debugging.</task>
      <task>Investigate and fix test suite failures.</task>
    </help>
  </project>

  <project cat='misc'>
    <title>The &os; Foundation</title>

    <contact>
      <person>
	<name>
	  <given>Deb</given>
	  <common>Goodkin</common>
	</name>
	<email>deb@FreeBSDFoundation.org</email>
      </person>
    </contact>

    <links>
      <url href="http://www.FreeBSDFoundation.org/"/>
    </links>

    <body>
      <p>The &os; Foundation is a 501(c)(3) non-profit organization
	dedicated to supporting and promoting the &os; Project and
	community worldwide.  Most of our funding is used to support
	&os; development projects, conferences and developer summits,
	purchase equipment to grow and improve the &os; infrastructure,
	and provide legal support for the Project.</p>

      <p>We listened to our donors who asked us to have more fundraising
	efforts throughout the year.  This quarter we had the second of
	three fundraising campaigns planned for 2013.  We started the
	quarter having raised $365,291.  By the end of the quarter, we
	raised $410,000 for the year.  These early donations have made a
	significant impact on our fundraising efforts this year.</p>

      <p>Some of the highlights from this past quarter include:</p>

      <ul>
	<li>Projects completed last quarter:
	
	  <ul>
	    <li>ARM Superpages</li>
	    <li>Documentation project infrastructure enhancements</li>
	  </ul></li>

	<li>Projects in progress:
	
	  <ul>
	    <li>Native iSCSI kernel stack</li>
	    <li>Newcons console driver</li>
	  </ul></li>

	<li>Projects that started last quarter:
	
	  <ul>
	    <li>Capsicum Integration</li>
	    <li>Network Stack Layer 2 Modernization</li>
	  </ul></li>

	<li>Platinum Sponsor for EuroBSDCon, had six Foundation
	  representatives attend the conference and the Developer Summit,
	  sponsored 7 developers to attend the conference, and sponsored
	  the Developer Summit.</li>

	<li>Sponsored the Cambridge Developer Summit, and sponsored 2
	  developers to attend this event.</li>

	<li>Attended Indianapolis LinuxFest July 27, FOSSCON in
	  Philadelphia August 10, Ohio LinuxFest in Columbus September 14,
	  and LinuxCon in New Orleans September 16-17, to promote
	  &os;.</li>

	<li>Met with the &os; Core Team to discuss their goals and to
	  discuss areas that we can help.</li>

	<li>Met with the Documentation Team to talk about helping them
	  update their website as well as what other areas we can help
	  them with.</li>

	<li>Recognized Dag-Erling Sm&oslash;rgrav at EuroBSDCon for his
	  contributions to &os;.</li>

	<li>Became a sponsor of vBSDCon, a new conference in Washington,
	  DC.</li>

	<li>Hired Glen Barber as a full-time employee to do system
	  administration work and to help with release engineering.</li>

	<li>Hired Cinthy Tanko as a part-time administrative assistant
	  to help with day-to-day Foundation activities.</li>

	<li>Purchased hardware to be placed in our NYI colo to support
	  the building and distribution of new style packages in advance
	  of &os;&nbsp;10.</li>

	<li>Provided teleconferencing services to the Core Team to
	  support their monthly conferences.</li>
      </ul>
    </body>
  </project>

  <project cat='bin'>
    <title>Capsicum</title>

    <contact>
      <person>
	<name>
	  <given>Pawel Jakub</given>
	  <common>Dawidek</common>
	</name>
	<email>pjd@FreeBSD.org</email>
      </person>
    </contact>

    <body>
      <p>Capsicum is the &os; sandboxing subsystem, which presents
	programmers with a capability module allowing fine-grained
	delegation of rights to less-privileged processes.  Casper is a
	friendly daemon that provides services to sandboxed processes,
	allowing policy-based access to privileged services such as DNS
	resolution.</p>

      <p>The work on Capsicum and related projects (such as Casper,
	<tt>libnv</tt>, etc.) is progressing nicely.  An overhaul of the
	<tt>cap_rights_t</tt> was committed to &os; <tt>head</tt> and
	will be included in 10.0.  This allows us to have more
	capability rights on file descriptors than the previous limit of
	64 rights, which was almost reached.  This change is not
	backward compatible, so it was very important to get it into
	10.0.</p>

      <p><tt>libnv</tt>, used for communication between Casper services
	and consumers, but which will hopefully be used more widely, is
	finalized and comes with a nice set of regression tests.</p>

      <p>The number of applications sandboxed using the Capsicum
	framework is increasing.  We have around 10 of them already in
	base and more that are not yet committed.</p>

      <p>This project is being sponsored by the &os; Foundation.</p>
    </body>

    <help>
      <task>Finish documentation of Casper and its services.</task>

      <task>Implement regression tests for Casper services.</task>

      <task>Finish documentation for <tt>libnv</tt>.</task>

      <task>Start making <tt>libc</tt> more sandbox-friendly, that is,
	modifying functions such as <tt>strerror(3)</tt>,
	<tt>strsignal(3)</tt>, <tt>localtime(3)</tt>,
	<tt>login_get*()</tt>, <tt>getservent(3)</tt>,
	<tt>getprotent(3)</tt>, and <tt>getrpcent(3)</tt> which
	currently open files on first use, which might be too late if we
	are already in a capability-mode sandbox.</task>

      <task>Rethink the <tt>system.filesystem</tt> Casper service to
	allow for easy compartmentalization of various command-line
	tools that operate on multiple files.</task>
    </help>
  </project>

  <project cat='ports'>
    <title>GNOME/&os;</title>

    <contact>
      <person>
	<name>&os; GNOME Team</name>
	<email>gnome@FreeBSD.org</email>
      </person>
    </contact>

    <links>
      <url href="http://www.FreeBSD.org/gnome/" />
    </links>

    <body>
      <p>Glib&nbsp;2.36 and Gtk&nbsp;3.8 were imported into the ports
	tree.  The GNOME Team is currently working on improving the
	quality of GNOME&nbsp;3.6.  The version of
	<tt>multimedia/cheese</tt> shipped with GNOME&nbsp;3 is now able
	to use <tt>devd(8)</tt> to find the camera through
	<tt>multimedia/webcamd</tt>.  Several build improvements have
	been made to the <tt>www/webkit-gtk3</tt> port, however it still
	is rather fragile.</p>

      <p>MATE, a desktop environment forked from the now-unmaintained
	codebase of GNOME&nbsp;2, is about ready to go in.</p>

      <p>GNOME&nbsp;2 will be removed at some point in the near future.
	How or when this will happen is not yet clear.</p>
    </body>

    <help>
      <task>Test the update.  Contact the maintainers if it is suspected
	that a port does not work with the newer version of
	<tt>devel/glib20</tt>.</task>

      <task>Update the &os; GNOME website with recent changes in the
	ports tree, add new items in preparation for GNOME&nbsp;3 and Mate,
	etc.</task>

      <task>Continue working on GNOME&nbsp;3.6, stability and missing
	features.</task>

      <task>Import MATE into the ports tree.</task>
    </help>
  </project>

  <project cat='doc'>
    <title>&os; Documentation Project Primer Edit</title>

    <contact>
      <person>
	<name>
	  <given>Warren</given>
	  <common>Block</common>
	</name>
	<email>wblock@FreeBSD.org</email>
      </person>
    </contact>

    <links>
      <url href="http://www.freebsd.org/doc/en/books/fdp-primer/book.html"/>
    </links>

    <body>
      <p>The &os; Documentation Project Primer had not changed at the
	same rate as the documents themselves.  Some sections were
	outdated and others were verbose and confusing, while
	information on new changes to the documentation were not
	described at all.  In July, Warren gave the entire FDP Primer a
	fairly intense edit for simplicity and clarity.  Chapters and
	sections were moved into a more logical order, and information
	was updated to be a better guide to the current state.  Markup
	examples were added and revised.  Style guidelines were also
	extended and updated.  The Primer is now far more consistent and
	usable.  As always, there is still room for improvement, and
	additions or corrections are encouraged.</p>
    </body>

    <help>
      <task>An introductory chapter on writing manual pages with
	<tt>mdoc(7)</tt> would be an excellent addition.</task>
    </help>
  </project>

  <project cat='arch'>
    <title>&os;/sparc64</title>

    <contact>
      <person>
	<name>
	  <given>Marius</given>
	  <common>Strobl</common>
	</name>
	<email>marius@FreeBSD.org</email>
      </person>
    </contact>

    <body>
      <p>There are several things going on with the &os;/sparc64
	port.</p>

      <p>After having fixed all remaining problems and starting with
	9.2-RELEASE, releases for this architecture are cross-built on
	the &os; Project cluster.  As one might already have noticed,
	this means that from now on, sparc64 install sets and images
	including those for ALPHA, BETA, and RC builds, are available
	alongside those for the other platforms supported by &os;.
	Since August 2013, automatically cross-built monthly
	&os;/sparc64 snapshots are distributed via the official project
	mirrors.  Hopefully, this can soon be extended further with
	<tt>freebsd-update(8)</tt> support for sparc64.</p>

      <p>The X.Org ports have been fixed to work on sparc64 when built
	with the <tt>WITH_NEW_XORG</tt> knob.  However, it still needs
	to be evaluated whether the recently committed update to Mesa
	9.1.6 has introduced any breakage.</p>
    </body>
  </project>

  <project cat='team'>
    <title>&os; Port Management Team</title>

    <contact>
      <person>
	<name>&os; Port Management Team</name>
	<email>portmgr@FreeBSD.org</email>
      </person>
    </contact>

    <links>
      <url href="http://www.FreeBSD.org/ports/" />
      <url href="http://www.freebsd.org/doc/en/articles/contributing-ports/" />
      <url href="http://portsmon.freebsd.org/index.html" />
      <url href="http://www.freebsd.org/portmgr/index.html" />
      <url href="http://blogs.freebsdish.org/portmgr/" />
      <url href="http://www.twitter.com/freebsd_portmgr/" />
      <url href="http://www.facebook.com/portmgr" />
      <url href="http://lists.freebsd.org/mailman/listinfo/freebsd-pkg-fallout" />
    </links>

    <body>
      <p>The ports tree contains approximately 24,400 ports, while the
	PR count exceeds 1,900.  In the third quarter, we added four new
	committers and took in six commit bits for safekeeping.</p>

      <p>A significant amount of effort has gone into tweaking and
	manipulating the infrastructure to modernize and update it, in
	preperation for <tt>pkg(8)</tt> replacing the old
	<tt>pkg_add(1)</tt> infrastructure, as well as preparing for
	&os;&nbsp;10.0 with Clang as default compiler, <tt>libc++</tt>
	as the default C++ standard library, and <tt>iconv(1)</tt>
	integrated into <tt>libc</tt>.</p>

      <p>Automated procedures for quality assurance have been
	implemented, notably <tt>pkg-fallout</tt>.  All porters are
	encouraged to subscribe to the associated mailing list (see
	links), and do their part to fix ports for <tt>pkg(8)</tt> and
	Clang readiness.</p>

      <p>Many iterations of tests were run to ensure that as many
	packages as possible would be available for the 9.2 release.</p>
    </body>

    <help>
      <task>Most ports PRs are assigned, we now need to focus on
	testing, committing, and closing.</task>
    </help>
  </project>

  <project cat='team'>
    <title>&os; Core Team</title>

    <contact>
      <person>
	<name>&os; Core Team</name>
	<email>core@FreeBSD.org</email>
      </person>
    </contact>

    <body>
      <p>In the third quarter of 2013, the Core Team focused on
	officially launching <tt>pkg.freebsd.org</tt>, the Project's
	official <tt>pkg(8)</tt> repository, in cooperation with the
	Port Management Team, the Security Team, and the Cluster
	Administration Team.  At the same time, there are plans to
	gradually deprecate the use of the old <tt>pkg_add(1)</tt>,
	allowing <tt>pkg(8)</tt> to be the default binary package
	management solution for &os;, arriving with 10.0-RELEASE.
	Thomas Abthorpe has been appointed to the role of liaison
	between the Core Team and the Ports Management Team, in order to
	make the collaboration more effective.</p>

      <p>David Chisnall has joined the group that publishes the
	Quarterly Status reports and compiled a special status report on
	the results of the BSDCan&nbsp;2013 Developer Summit.  David
	also took the lead role on the organization of an off-season
	developer summit in Cambridge, UK, which was finally held at the
	end of August.  For the items discussed in Cambridge,
	preparation of a detailed report is still in progress.</p>

      <p>There were src commit bits issued for 5 new developers and most
	of the src commits being idle more than 12 months have been
	taken into safekeeping as result of a major cleanup to the
	repository access file in July, performed by Gavin Atkinson.</p>
    </body>
  </project>

  <project cat='ports'>
    <title>X.Org on &os;</title>

    <contact>
      <person>
	<name>&os;X11 Team</name>
	<email>x11@FreeBSD.org</email>
      </person>
    </contact>

    <links>
      <url href="https://wiki.freebsd.org/Graphics">X11 Team roadmap (WIP)</url>
      <url href="https://wiki.freebsd.org/Xorg">Ports-related status</url>
      <url href="http://trillian.chruetertee.ch/ports/browser/trunk">Ports-related development repository</url>
      <url href="https://wiki.freebsd.org/AMD_GPU">AMD GPU status</url>
      <url href="https://github.com/dumbbell/freebsd/tree/kms-drm-update-38">DRM generic code update branch on GitHub</url>
    </links>

    <body>
      <p>Mesa 9.1 (libGL and dri) was updated in ports.  This includes
	experimental ports for libEGL and libgles2: they are
	dependencies of the experimental ports for Wayland and
	Weston.</p>

      <p>The <tt>radeonkms</tt> driver was committed to &os;
	<tt>head</tt> in the end of August and will be part of
	10.0-RELEASE.  It received several fixes since the initial
	commit and now seems quite stable.  However, one missing major
	feature is support for suspend/resume: the GPU almost always
	locks up during resume on the test computer.</p>

      <p>Thanks to the update of Mesa and the update of
	<tt>x11-drivers/xf86-video-ati</tt> to 7.2.0
	in the ports tree, every pieces are in place to allow users to use recent
	AMD video cards (up to HD7000, maybe some HD8000).</p>

      <p>The driver will now only receive bug fixes and focus will move
	on the update of the DRM generic code and the <tt>i915</tt>
	driver.</p>

      <p>The generic DRM code, shared by the <tt>i915kms</tt> and
	<tt>radeonkms</tt> video drivers is quite old now.  Work has
	started to update and sync it with that of Linux&nbsp;3.8.  This
	code is available on GitHub.</p>

      <p>The expected benefits are:</p>

      <ul>
	<li>Fixes in the framebuffer code, which would help the future
	  deployment of Newcons.</li>

	<li>Preliminary support for minor devices (that is, control
	  versus render nodes).</li>

	<li>Support for <tt>setmaster</tt> and <tt>dropmaster</tt>,
	  which allows to run multiple X sessions.</li>
      </ul>

      <p>François Tigeot from DragonFly is also working on updates to
	their DRM code, and the X11 team is planning to share the
	effort.</p>

      <p>An experimental <tt>devd(8)</tt> backend was added to the
	<tt>x11-servers/xorg-server</tt> port.  This allows X.Org to use
	<tt>devd(8)</tt> to detect and configure input devices (for
	example, keyboards and mices) dynamically.</p>

      <p>Our current wiki articles are used to describe projects and
	report status.  However, they lack some consistency and links
	between them.  We started to think about reorganizing them
	to:</p>

      <ul>
       <li>Improve the coordination between the ports and the kernel
	efforts.</li>

       <li>Make the information more accessible.</li>
      </ul>

      <p>Nothing is visible yet on the wiki.</p>
    </body>

    <help>
      <task>Keep tracking Mesa 9.2 or later and <tt>xorg-server</tt>
	1.14.  Both are currently blocked, but it is good to keep track of
	what upstream is doing.</task>

      <task>Test and report successes and failures for AMD GPUs.</task>

      <task>Wayland builds now.  Work is being done on Weston to see if
	there are any run-time issues.  Weston is the reference
	compositor for Wayland.</task>

      <task>Improve the <tt>devd(8)</tt> backend for
	<tt>x11-servers/xorg-server</tt>, so the HAL option can be
	removed completely.</task>
    </help>
  </project>

  <project cat='kern'>
    <title>Continuation of the Newcons Project</title>

    <contact>
      <person>
	<name>
	  <given>Aleksandr</given>
	  <common>Rybalko</common>
	</name>

	<email>ray@FreeBSD.org</email>
      </person>
    </contact>

    <links>
      <url href="http://svn.freebsd.org/base/user/ed/newcons/">Newcons project branch</url>
    </links>

    <body>
      <p>The Newcons project is aimed to replace the old
	<tt>syscons(4)</tt>-based virtual terminals.  The main
	objectives are: support Unicode characters, and move away from
	the dependency on fixed VGA and VESA graphics modes and built-in
	BIOS services.</p>

      <p>This project was originally started by Ed Schouten, and it
	already featured the following features (among many others) in
	2013:</p>

      <ul>
	<li>Unicode fonts with Latin, Cyrillic and some more simple
	  character sets.</li>
	<li>Unicode output support.</li>
	<li>Graphics mode support.</li>
	<li>Text mode support.</li>
	<li><tt>sysmouse(4)</tt> support, without copy/paste.</li>
      </ul>

      <p>And these have been extended by the following items
	recently:</p>

      <ul>
	<li>History, that is, the ability to scroll through the terminal
	  history.  The old, separate history buffer has been
	  removed.</li>

	<li>The history is implemented by a circular buffer which has no
	  risk of overflow, and scrolling appears "unlimited".</li>

	<li><tt>VT_PROCESS</tt> mode, a way to hold the terminal and
	  prevent terminal switching.  For example, X.Org uses this
	  feature to prevent the user from switching to a non-X
	  terminal.</li>

	<li><tt>drm2/fb_helper</tt>, the KMS driver.  This binds Newcons
	  to framebuffers created the DRM-enabled video drivers in the
	  kernel (such as <tt>i915kms</tt> and <tt>radeonkms</tt>).</li>

	<li>Dynamic attachment of VT drivers, <tt>vt_allocate()</tt> to
	  allow attaching console video drivers at a later point where
	  framebuffer owner can manage the initialization.  This is for
	  KMS and devices without early graphics support.</li>
      </ul>

      <p>Supported startup modes for KMS:</p>

      <ul>
	<li>Start without VT graphics drivers, then load KMS.</li>
	<li>Start with VGA, then load KMS.</li>
	<li>Preload KMS, then the KMS driver will be attached to the
	  output.</li>
	<li>Preload KMS, start with VGA, then KMS driver will replace
	  the VGA output.</li>
      </ul>

      <p>This project is being sponsored by The &os; Foundation.  Many
	thanks to Ed Schouten, who started the Newcons project and did
	most of the work.</p>
    </body>

    <help>
      <task>Implement a Generic Framebuffer interface, a simple
	interface to offer direct access to the framebuffer from the
	userland (via <tt>/dev/fb*</tt>) and automatic management of
	virtual terminals by Newcons.</task>

      <task>Mouse support, copy/paste using
	<tt>sysmouse(4)</tt>.</task>

      <task>Improve locking.</task>

      <task>Bug fixes.</task>

      <task>Integrate into &os; <tt>head</tt>.</task>

      <task>Integrate into &os;&nbsp;10.0.</task>

      <task>Implement mapping non-ASCII characters to Unicode on
	keyboard input.</task>

      <task>Adapt existing screen savers.</task>

      <task>Last but not least, testing is welcome!</task>
    </help>
  </project>
</report>
