<!--

  The FreeBSD Documentation Project

  $FreeBSD$

  This file documents the values of the USES make variable.  The format is
  easy to grasp from the already-added entries below (or use this scheme
  below as a skeleton):

<row>
  <entry><literal>FEATURE</literal></entry>
  <entry>ARGUMENTS</entry>
  <entry>DESCRIPTION</entry>
</row>

-->

<row>
  <entry><literal>ada</literal></entry>
  <entry>(none)</entry>

  <entry>Depends on an <application>Ada</application>-capable
    compiler, and sets <varname>CC</varname> accordingly.</entry>
</row>

<row>
  <entry><literal>bison</literal></entry>
  <entry>(none), <literal>build</literal>, <literal>run</literal>,
    <literal>both</literal></entry>
  <entry>Implies that the port uses <filename
      role="package">devel/bison</filename> in one way or another.  By
    default, with no arguments or with the <literal>build</literal>
    argument, it implies <command>bison</command> as a build-time
    dependency, <literal>run</literal> implies a run-time dependency,
    and <literal>both</literal> implies both run-time and build-time
    dependencies.</entry>
</row>

<row>
  <entry><literal>charsetfix</literal></entry>
  <entry>(none)</entry>
  <entry>Prevents the port from installing
    <filename>charset.alias</filename>.  This should be installed only
    by <filename role="package">converters/libiconv</filename>.
    <varname>CHARSETFIX_MAKEFILEIN</varname> can be set to a path
    relative to <varname>WRKSRC</varname> if
    <filename>charset.alias</filename> is not installed by
    <varname>WRKSRC</varname>/<filename>Makefile.in</filename>.</entry>
</row>

<row>
  <entry><literal>cmake</literal></entry>
  <entry>(none), <literal>outsource</literal></entry>

  <entry>The port will use <application>CMake</application> for
    configuring and building.  With the <literal>outsource</literal>
    argument, an out-of-source build will be performed.  For more
    information see <xref linkend="using-cmake"/>.</entry>
</row>

<row>
  <entry><literal>compiler</literal></entry>
  <entry>(none), <literal>c++11-lang</literal>,
    <literal>c++11-lib</literal>, <literal>c11</literal>,
    <literal>openmp</literal>, <literal>features</literal></entry>

  <entry>Determines which compiler to use based on any given wishes.
    Use <literal>c++11-lang</literal> if the port needs a C+11-capable
    compiler, and <literal>c++11-lib</literal> if the port also needs
    a C++11-ready standard library.  If the port needs a compiler
    understanding C11 or OpenMP, the corresponding parameters can be
    used.  Use <literal>features</literal> to request a list of features
    supported by the default compiler.  After including
    <filename>bsd.port.pre.mk</filename> the port can inspect the results
    using these variables:
    <itemizedlist>
      <listitem><para><varname>COMPILER_TYPE</varname>: the default
	    compiler on the system, either gcc or clang</para></listitem>
      <listitem><para><varname>ALT_COMPILER_TYPE</varname>: the
	    alternative compiler on the system, either gcc or clang.
	    Only set if two compilers are present in the base
	    system.</para></listitem>
      <listitem><para><varname>COMPILER_VERSION</varname>: the first two
	    digits of the version of the default
	    compiler.</para></listitem>
      <listitem><para><varname>ALT_COMPILER_VERSION</varname>: the first
	    two digits of the version of the alternative compiler, if
	    present.</para></listitem>
      <listitem><para><varname>CHOSEN_COMPILER_TYPE</varname>: the
	    chosen compiler, either gcc or clang</para></listitem>
      <listitem><para><varname>COMPILER_FEATURES</varname>: the features
	    supported by the default compiler.  It currently lists the
	    C++ library.</para></listitem>
    </itemizedlist></entry>
</row>

<row>
  <entry><literal>desktop-file-utils</literal></entry>
  <entry>(none)</entry>

  <entry>Implies that the port uses the
    <application>update-desktop-database</application> from
    <filename role="package">devel/desktop-file-utils</filename>.  An
    extra post-install step will be run without interfering with any
    post-install steps already in the port
    <filename>Makefile</filename>.  Lines will be inserted into the
    plist to run <application>update-desktop-database</application> on
    package install or removal.</entry>
</row>

<row>
  <entry><literal>display</literal></entry>
  <entry>(none), <literal>ARGS</literal></entry>

  <entry>Set up a virtual display environment.  If the environment
    variable <varname>DISPLAY</varname> is not set, then
    <application>Xvfb</application> is added as a build dependency,
    and <varname>CONFIGURE_ENV</varname> is extended with the port
    number of the currently running instance of
    <application>Xvfb</application>.  The <literal>ARGS</literal>
    parameter defaults to <literal>install</literal> and controls the
    phase around which to start and stop the virtual display.</entry>
</row>

<row>
  <entry><literal>dos2unix</literal></entry>
  <entry>(none)</entry>

  <entry>The port has files with line endings in DOS format which need
    to be converted.  Three variables can be set to control which files
    will be converted.  The default is to convert
    <emphasis>all</emphasis> files, including binaries.
    <itemizedlist>
      <listitem><para><varname>DOS2UNIX_REGEX</varname>: match file
	  names based on a regular expression.</para></listitem>
      <listitem><para><varname>DOS2UNIX_FILES</varname>: match literal
	  file names.</para></listitem>
      <listitem><para><varname>DOS2UNIX_GLOB</varname>: match file
	  names based on a glob pattern.</para></listitem>
    </itemizedlist></entry>
</row>

<row>
  <entry><literal>fmake</literal></entry>
  <entry>(none)</entry>
  <entry>Implies that the port uses <filename
      role="package">devel/fmake</filename> as build-time
    dependency.</entry>
</row>

<row>
  <entry><literal>fuse</literal></entry>
  <entry>(none)</entry>

  <entry>Implies the port will depend on the FUSE library and handle
    the dependency on the kernel module depending on the version
    of &os;.</entry>
</row>

<row>
  <entry><literal>gettext</literal></entry>
  <entry>(none), <literal>lib</literal>, <literal>build</literal>,
    <literal>run</literal></entry>
  <entry>Implies that the port uses
    <filename role="package">devel/gettext</filename> in one way or
    another.  By default, with no arguments or with the
    <literal>lib</literal> argument, implies
    <command>gettext</command> with build-time and run-time
    dependencies, <literal>build</literal> implies a build-time
    dependency, and <literal>run</literal> implies a run-time
    dependency.</entry>
</row>

<row>
  <entry><literal>gmake</literal></entry>
  <entry>(none)</entry>
  <entry>Implies that the port uses <filename
      role="package">devel/gmake</filename> as build-time
    dependency.</entry>
</row>

<row>
  <entry><literal>iconv</literal></entry>
  <entry>(none), <literal>lib</literal>, <literal>build</literal>,
    <literal>patch</literal></entry>

  <entry>Implies that the port uses <command>iconv</command>
    functions, either from the port
    <filename role="package">converters/libiconv</filename> as a
    build-time and run-time dependency, or from the base system on
    10-CURRENT after a native <command>iconv</command> was committed
    in <revnumber>254273</revnumber>.  By default, with no arguments or with
    the <literal>lib</literal> argument, implies
    <command>iconv</command> with build-time and run-time
    dependencies, <literal>build</literal> implies a build-time
    dependency, and <literal>patch</literal> implies a patch-time
    dependency.  For more information see
    <xref linkend="using-iconv"/>.</entry>
</row>

<row>
  <entry><literal>imake</literal></entry>
  <entry>(none)</entry>
  <entry>Implies that the port uses <filename
      role="package">devel/imake</filename> as build-time
    dependency.</entry>
</row>

<row>
  <entry><literal>kmod</literal></entry>
  <entry>(none)</entry>
  <entry>Fills in the boilerplate for kernel module ports, currently:
  <itemizedlist>
    <listitem><para>Add <literal>kld</literal> to
      <varname>CATEGORIES</varname>.</para></listitem>
    <listitem><para>Set <varname>SSP_UNSAFE</varname>.</para></listitem>
    <listitem><para>Set <varname>IGNORE</varname> if the kernel sources are
      not found in <varname>SRC_BASE</varname>.</para></listitem>
    <listitem><para>Define <varname>KMODDIR</varname> to <filename
	class="directory">/boot/modules</filename> by default, add it
      to <varname>PLIST_SUB</varname> and <varname>MAKE_ENV</varname>,
      and create it upon installation.  If <varname>KMODDIR</varname>
      is set to
      <filename class="directory">/boot/kernel</filename>, it will be
      rewritten to <filename class="directory">/boot/modules</filename>.
      This prevents breaking packages when upgrading the kernel due to
      <filename class="directory">/boot/kernel</filename> being renamed
      to <filename class="directory">/boot/kernel.old</filename> in the
      process.</para></listitem>
    <listitem><para>Handle cross-referencing kernel modules upon installation
      and deinstallation.</para></listitem>
  </itemizedlist> 
</entry>
</row>

<row>
  <entry><literal>motif</literal></entry>
  <entry>(none)</entry>
  <entry>Implies that the ports uses
    <filename role="package">devel/open-motif</filename> as a library
    dependency.  End users can set <varname>WANT_LESSTIF</varname>
    for the dependency to be on
    <filename role="package">devel/lesstif</filename> instead of
    <filename role="package">devel/open-motif</filename>.</entry>
</row>

<row>
  <entry><literal>ncurses</literal></entry>
  <entry>(none), <literal>base</literal>,
    <literal>port</literal></entry>
  <entry>Implies that the port uses
    <application>ncurses</application>, and causes some useful
    variables to be set.</entry>
</row>

<row>
  <entry><literal>pathfix</literal></entry>
  <entry>(none)</entry>
  <entry>Look for the <filename>Makefile.in</filename> and
    <filename>configure</filename> files in the port's associated
    sources and fix common paths to make sure they respect the &os;
    hierarchy.</entry>
</row>

<row>
  <entry><literal>perl5</literal></entry>
  <entry>(none)</entry>
  <entry>Implies a dependency on <application>Perl</application>.  The
    following variables can be set:<itemizedlist>
      <listitem><para><varname>PERL_VERSION</varname>: Full version of
	  <application>Perl</application> to use, or the default if
	  not set</para></listitem>
      <listitem><para><varname>PERL_ARCH</varname>: Directory name of
	  architecture dependent libraries, defaults to <filename
	    class="directory">mach</filename></para></listitem>
      <listitem><para><varname>PERL_PORT</varname>: Name of the
	  <application>Perl</application> port to be installed, the
	  default is derived from 
	  <varname>PERL_VERSION</varname></para></listitem>
      <listitem><para><varname>SITE_PERL</varname>: Directory name for
	  site specific <application>Perl</application>
	  packages</para></listitem>
      <listitem><para><varname>USE_PERL5</varname>: Phases in which to
	  use <application>Perl</application>, can be
	  <literal>extract</literal>, <literal>patch</literal>,
	  <literal>build</literal>, <literal>install</literal>, or
	  <literal>run</literal>.  It can also be
	  <literal>configure</literal>, <literal>modbuild</literal>, or
	  <literal>modbuildtiny</literal> when
	  <filename>Makefile.PL</filename>, <filename>Build.PL</filename>,
	  or the Module::Build::Tiny flavor of <filename>Build.PL</filename>
	  is required.  Defaults to
	  <literal>build run</literal>.</para></listitem>
    </itemizedlist></entry>
</row>

<row>
  <entry><literal>pkgconfig</literal></entry>

  <entry>(none), <literal>build</literal>, <literal>run</literal>,
    <literal>both</literal></entry>

  <entry>Implies that the port uses <filename
      role="package">devel/pkgconf</filename> in one way or another.
    With no arguments or with the <literal>build</literal>
    argument, it implies <command>pkg-config</command> as a build-time
    dependency; <literal>run</literal> implies a run-time dependency;
    and <literal>both</literal> implies both run-time and build-time
    dependencies.</entry>
</row>

<row>
  <entry><literal>pure</literal></entry>
  <entry>(none), <literal>ffi</literal></entry>
  <entry>Implies that the port uses <filename
      role="package">lang/pure</filename> in one way or another,
    but largely is used for building related pure ports.
    With the <literal>ffi</literal> argument, it implies <filename
      role="package">devel/pure-ffi</filename>
    as a run-time dependency.</entry>
</row>

<row>
  <entry><literal>qmail</literal></entry>
  <entry>(none), <literal>build</literal>, <literal>run</literal>,
    <literal>both</literal>, <literal>vars</literal></entry>
  <entry>Implies that the port uses <filename
      role="package">mail/qmail</filename> in one way or another.
    With the <literal>build</literal> argument, it implies
    <command>qmail</command> as a build-time dependency.
    <literal>run</literal> implies a run-time dependency.  Using no
    argument or the <literal>both</literal> argument implies both
    run-time and build-time dependencies.  <literal>vars</literal>
    will only set QMAIL variables for the port to use.</entry>
</row>

<row>
  <entry><literal>qmake</literal></entry>
  <entry>(none), <literal>norecursive</literal></entry>

  <entry>The port will use <application>QMake</application> for
    configuring.  For more information see
    <xref linkend="using-qmake"/>.</entry>
</row>

<row>
  <entry><literal>readline</literal></entry>
  <entry>(none), port</entry>
  <entry>Implies that the port uses
    <application>readline</application> as library dependency, and
    sets <varname>CPPFLAGS</varname> and <varname>LDFLAGS</varname> as
    necessary.</entry>
</row>

<row>
  <entry><literal>shared-mime-info</literal></entry>
  <entry>(none)</entry>

  <entry>Implies that the port uses
    <application>update-mime-database</application> from
    <filename role="package">misc/shared-mime-info</filename>.  This
    uses will automatically add a post-install step in such a way that
    the port itself still can specify there own post-install step if
    needed.  It also insert lines into the plist for package install
    and removal to run
    <application>update-mime-data</application> with the correct
    arguments.</entry>
</row>

<row>
  <entry><literal>shebangfix</literal></entry>
  <entry>(none)</entry>
  <entry>A lot of software uses incorrect locations for script
    interpreters, most notably <filename>/usr/bin/perl</filename> and
    <filename>/bin/bash</filename>.  This fixes shebang lines in
    scripts listed in <varname>SHEBANG_FILES</varname>.  Currently
    <application>Perl</application>,
    <application>Python</application>,
    <application>Bash</application>, <application>Ruby</application>,
    and <application>PHP</application> are supported by default.  To
    support another interpreter, set <varname>SHEBANG_LANG</varname>
    (for example
    <literal>SHEBANG_LANG=lua</literal>), then
    <varname>lua_OLD_CMD</varname> and
    <varname>lua_CMD</varname>.</entry>
</row>

<row>
  <entry><literal>uidfix</literal></entry>
  <entry>(none)</entry>
  <entry>Changes some default behavior (mostly variables) of the build
    system to allow installing this port as a normal user.  Try this in
    your port before adding <literal>NEED_ROOT=yes</literal></entry>
</row>

<row>
  <entry><literal>zenoss</literal></entry>
  <entry>(none)</entry>
  <entry>Implies the port uses
    <filename role="package">net-mgmt/zenoss</filename> in one way or
    another, but largely is used for building zenoss related zenpack
    ports.</entry>
</row>

<row>
  <entry><literal>zope</literal></entry>
  <entry>(none)</entry>
  <entry>Implies that the port uses
    <filename role="package">www/zope</filename> in one way or another,
    but is largely used for building zope related ports.
    <varname>ZOPE_VERSION</varname> can be used by a port to indicate that
    a specific version of zope shall be used.</entry>
</row>
