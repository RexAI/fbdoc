<?xml version="1.0" encoding="iso-8859-1"?>
<!--
     The FreeBSD Documentation Project

     $FreeBSD$
-->
<chapter xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.0" xml:id="l10n">
  <info><title>Localization -
    <acronym>i18n</acronym>/<acronym>L10n</acronym> Usage and
    Setup</title>
    <authorgroup>
      <author><personname><firstname>Andrey</firstname><surname>Chernov</surname></personname><contrib>Contributed by </contrib></author>
    </authorgroup>
    <authorgroup>
      <author><personname><firstname>Michael C.</firstname><surname>Wu</surname></personname><contrib>Rewritten by </contrib></author>
      <!-- 30 Nv 2000 -->
    </authorgroup>
  </info>

  

  <sect1 xml:id="l10n-synopsis">
    <title>Synopsis</title>

    <para>&os; is a distributed project with users and contributors
      located all over the world.  This chapter discusses the
      internationalization and localization features of &os; that
      allow non-English speaking users to get real work done.  Since
      there are many aspects of the <acronym>i18n</acronym>
      implementation in both the system and application levels, more
      specific sources of documentation are referred to, where
      applicable.</para>

    <para>After reading this chapter, you will know:</para>

    <itemizedlist>
      <listitem>
	<para>How different languages and locales are encoded on
	  modern operating systems.</para>
      </listitem>

      <listitem>
	<para>How to set the locale for a login shell.</para>
      </listitem>

      <listitem>
	<para>How to configure the console for non-English
	  languages.</para>
      </listitem>

      <listitem>
	<para>How to use <application>Xorg</application> effectively
	  with different languages.</para>
      </listitem>

      <listitem>
	<para>Where to find more information about writing
	  <acronym>i18n</acronym>-compliant applications.</para>
      </listitem>
    </itemizedlist>

    <para>Before reading this chapter, you should:</para>

    <itemizedlist>
      <listitem><para>Know how to <link linkend="ports">install
	  additional third-party
	  applications</link>.</para></listitem>
    </itemizedlist>
  </sect1>

  <sect1 xml:id="l10n-basics">
    <title>The Basics</title>

    <sect2>
      <title>What Is
	<acronym>i18n</acronym>/<acronym>L10n</acronym>?</title>

      <indexterm>
	<primary>internationalization</primary>
	<see>localization</see>
      </indexterm>
      <indexterm><primary>localization</primary></indexterm>

      <para>The term internationalization has been shortened to
	<acronym>i18n</acronym>, which represents the number of
	letters between the first and the last letters of
	internationalization.  <acronym>L10n</acronym> uses the
	same naming scheme, coming from <quote>localization</quote>.
	Combined together,
	<acronym>i18n</acronym>/<acronym>L10n</acronym> methods,
	protocols, and applications allow users to use languages of
	their choice.</para>

      <para><acronym>i18n</acronym> applications are programmed using
	<acronym>i18n</acronym> kits under libraries.  These allow
	developers to write a simple file and translate displayed
	menus and texts to each language.</para>
    </sect2>

    <sect2>
      <title>Why Use
	<acronym>i18n</acronym>/<acronym>L10n</acronym>?</title>

      <para>Using <acronym>i18n</acronym>/<acronym>L10n</acronym>
	allows a user to view, input, or process data in non-English
	languages.</para>
    </sect2>

    <sect2>
      <title>Which Languages Are Supported?</title>

      <para><acronym>i18n</acronym> and <acronym>L10n</acronym> are
	not &os; specific.  Currently, one can choose from most of the
	major languages, including but not limited to:  Chinese,
	German, Japanese, Korean, French, Russian, and
	Vietnamese.</para>
    </sect2>
  </sect1>

  <sect1 xml:id="using-localization">
    <title>Using Localization</title>

    <indexterm><primary>locale</primary></indexterm>

    <para>Localization settings are based on three main terms:
      Language Code, Country Code, and Encoding.  Locale names are
      constructed from these parts as follows:</para>

    <programlisting><replaceable>LanguageCode</replaceable>_<replaceable>CountryCode</replaceable>.<replaceable>Encoding</replaceable></programlisting>

    <sect2>
      <title>Language and Country Codes</title>

      <indexterm><primary>language codes</primary></indexterm>
      <indexterm><primary>country codes</primary></indexterm>

      <para>In order to localize a &os; system to a specific language,
	the user needs to determine the codes for the specific country
	and language as the country code tells applications which
	variation of the given language to use.  The following are
	examples of language/country codes:</para>

      <informaltable frame="none" pgwide="1">
	<tgroup cols="2">
	  <thead>
	    <row>
	      <entry>Language/Country Code</entry>
	      <entry>Description</entry>
	    </row>
	  </thead>

	  <tbody>
	    <row>
	      <entry>en_US</entry>
	      <entry>English - United States</entry>
	    </row>

	    <row>
	      <entry>ru_RU</entry>
	      <entry>Russian for Russia</entry>
	    </row>

	    <row>
	      <entry>zh_TW</entry>
	      <entry>Traditional Chinese for Taiwan</entry>
	    </row>
	  </tbody>
	</tgroup>
      </informaltable>

      <para>A complete listing of available locales can be found by
	typing:</para>

      <screen>&prompt.user; <userinput>locale -a</userinput></screen>
    </sect2>

    <sect2>
      <title>Encodings</title>

      <indexterm><primary>encodings</primary></indexterm>
      <indexterm><primary>ASCII</primary></indexterm>

      <para>Some languages use non-ASCII encodings that are 8-bit,
	wide, or multibyte characters.  For more information on these
	encodings, refer to &man.multibyte.3;.  Older applications do
	not recognize these encodings and mistake them for control
	characters.  Newer applications usually recognize 8-bit
	characters.  Depending on the implementation, users may be
	required to compile an application with wide or multibyte
	character support, or configure it correctly.  To provide
	application support for wide or multibyte characters, the
	<link xlink:href="&url.base;/ports/index.html">&os; Ports
	  Collection</link> contains programs for several languages.
	Refer to the <acronym>i18n</acronym> documentation in the
	respective &os; port.</para>

      <para>Specifically, the user needs to look at the application
	documentation to decide how to configure it correctly or to
	determine which compile options to use when building the
	port.</para>

      <para>Some things to keep in mind are:</para>

      <itemizedlist>
	<listitem>
	  <para>Language specific single C chars character sets
	    such as ISO8859-1, ISO8859-15, KOI8-R, and CP437.  These
	    are described in &man.multibyte.3;.</para>
	</listitem>

	<listitem>
	  <para>Wide or multibyte encodings such as EUC and
	    Big5.</para>
	</listitem>
      </itemizedlist>

      <para>The active list of character sets can be found at the
	<link xlink:href="http://www.iana.org/assignments/character-sets">IANA
	  Registry</link>.</para>

      <note>
	<para>&os; uses Xorg-compatible locale encodings
	  instead.</para>
      </note>

      <para>In the &os; Ports Collection, <acronym>i18n</acronym>
	applications include <literal>i18n</literal> in their names
	for easy identification.  However, they do not always support
	the language needed.</para>
    </sect2>

    <sect2 xml:id="setting-locale">
      <title>Setting Locale</title>

      <para>Usually it is sufficient to export the value of the
	locale name as <envar>LANG</envar> in the login shell.  This
	could be done in the user's <filename>~/.login_conf</filename>
	or in the startup file of the user's shell:
	(<filename>~/.profile</filename>,
	<filename>~/.bashrc</filename>, or
	<filename>~/.cshrc</filename>).  There is no need to set the
	locale subsets such as <envar>LC_CTYPE</envar> or
	<envar>LC_CTIME</envar>.  Refer to language-specific &os;
	documentation for more information.</para>

      <para>Each user should set the following two environment
	variables in their configuration files:</para>

      <itemizedlist>
	<listitem>
	  <para><envar>LANG</envar> for &posix;<indexterm>
	      <primary>POSIX</primary>
	    </indexterm>
	    &man.setlocale.3; family functions</para>
	</listitem>

	<listitem>
	  <indexterm><primary>MIME</primary></indexterm>

	  <para><envar>MM_CHARSET</envar> for applications' MIME
	    character set</para>
	</listitem>
      </itemizedlist>

      <para>These should be set in the user's shell configuration, the
	specific application configuration, and the
	<application>Xorg</application> configuration.</para>

      <sect3>
	<title>Setting Locale Methods</title>

	<indexterm><primary>locale</primary></indexterm>
	<indexterm><primary>login class</primary></indexterm>

	<para>This section describes the two methods for setting
	  locale.  The first is recommended and assigns the
	  environment variables in the
	  <link linkend="login-class">login class</link>.  The second
	  method adds the environment variable assignments to the
	  system's shell
	  <link linkend="startup-file">startup file</link>.</para>

	<sect4 xml:id="login-class">
	  <title>Login Classes Method</title>

	  <para>This method allows environment variables needed for
	    locale name and MIME character sets to be assigned once
	    for every possible shell instead of adding specific shell
	    assignments to each shell's startup file.
	    <link linkend="usr-setup">User Level Setup</link> can be
	    performed by each user while
	    <link linkend="adm-setup">Administrator Level Setup</link>
	    requires superuser privileges.</para>

	  <sect5 xml:id="usr-setup">
	    <title>User Level Setup</title>

	    <para>This provides a minimal example of a
	      <filename>.login_conf</filename> located in a user's
	      home directory which has both variables set for the
	      Latin-1 encoding:</para>

	    <programlisting>me:\
	:charset=ISO-8859-1:\
	:lang=de_DE.ISO8859-1:</programlisting>

	    <indexterm><primary>Traditional Chinese</primary>
	      <secondary>BIG-5 encoding</secondary></indexterm>
	    <para>Here is an example of a user's
	      <filename>.login_conf</filename> that sets the variables
	      for Traditional Chinese in BIG-5 encoding.  More
	      variables are set because some applications do not
	      correctly respect locale variables for Chinese,
	      Japanese, and Korean.</para>

	    <programlisting>#Users who do not wish to use monetary units or time formats
#of Taiwan can manually change each variable
me:\
	:lang=zh_TW.Big5:\
	:setenv=LC_ALL=zh_TW.Big5:\
	:setenv=LC_COLLATE=zh_TW.Big5:\
	:setenv=LC_CTYPE=zh_TW.Big5:\
	:setenv=LC_MESSAGES=zh_TW.Big5:\
	:setenv=LC_MONETARY=zh_TW.Big5:\
	:setenv=LC_NUMERIC=zh_TW.Big5:\
	:setenv=LC_TIME=zh_TW.Big5:\
	:charset=big5:\
	:xmodifiers="@im=gcin": #Set gcin as the XIM Input Server</programlisting>

	    <para>See <link linkend="adm-setup">Administrator Level
		Setup</link> and &man.login.conf.5; for more
	      details.</para>
	  </sect5>

	  <sect5 xml:id="adm-setup">
	    <title>Administrator Level Setup</title>

	    <para>Verify that the user's login class in
	      <filename>/etc/login.conf</filename> sets the correct
	      language:</para>

	    <programlisting><replaceable>language_name</replaceable>|<replaceable>Account Type Description</replaceable>:\
	:charset=<replaceable>MIME_charset</replaceable>:\
	:lang=<replaceable>locale_name</replaceable>:\
	:tc=default:</programlisting>

	    <para>The previous Latin-1 example would look like
	      this:</para>

	    <programlisting>german|German Users Accounts:\
	:charset=ISO-8859-1:\
	:lang=de_DE.ISO8859-1:\
	:tc=default:</programlisting>

	    <para>Whenever this file is edited, execute the following
	      command to update the capability database:</para>

	    <screen>&prompt.root; <userinput>cap_mkdb /etc/login.conf</userinput></screen>

	    <bridgehead renderas="sect4">Changing Login Classes with
	      &man.vipw.8;</bridgehead>

	    <indexterm>
	      <primary><command>vipw</command></primary>
	    </indexterm>
	    <para>When using <command>vipw</command> to add new users,
	      use <replaceable>language</replaceable> to set the
	      language:</para>

	    <programlisting>user:password:1111:11:<replaceable>language</replaceable>:0:0:User Name:/home/user:/bin/sh</programlisting>

	    <bridgehead renderas="sect4">Changing Login Classes with
	      &man.adduser.8;</bridgehead>

	    <indexterm>
	      <primary><command>adduser</command></primary>
	    </indexterm>
	    <indexterm><primary>login class</primary></indexterm>
	    <para>When using <command>adduser</command> to add new
	      users, configure the language as follows:</para>

	    <itemizedlist>
	      <listitem>
		<para>If all new users use the same language, set
		  <literal>defaultclass =
		    language</literal> in
		  <filename>/etc/adduser.conf</filename>.</para>
	      </listitem>

	      <listitem>
		<para>Alternatively, input the specified language at
		  this prompt:

		  <screen><prompt>Enter login class: default []:</prompt></screen>

		  when creating a new user using
		  &man.adduser.8;.</para>
	      </listitem>

	      <listitem>
		<para>Another alternative is to use the following
		  when creating a user that uses a different language
		  than the one set in
		  <filename>/etc/adduser.conf</filename>:</para>

		<screen>&prompt.root; <userinput>adduser -class language</userinput></screen>
	      </listitem>
	    </itemizedlist>

	    <bridgehead renderas="sect4">Changing Login Classes with
	      &man.pw.8;</bridgehead>
	    <indexterm>
	      <primary><command>pw</command></primary>
	    </indexterm>
	    <para>If &man.pw.8; is used to add new users, call
	      it in this form:</para>

	    <screen>&prompt.root; <userinput>pw useradd user_name -L language</userinput></screen>
	  </sect5>
	</sect4>

	<sect4 xml:id="startup-file">
	  <title>Shell Startup File Method</title>

	  <note>
	    <para>This method is not recommended because it requires
	      a different setup for each shell.  Use the <link linkend="login-class">Login Class Method</link>
	      instead.</para>
	  </note>

	  <indexterm><primary>MIME</primary></indexterm>
	  <indexterm><primary>locale</primary></indexterm>
	  <para>To add the locale name and MIME character set, set
	    the two environment variables shown below in the
	    <filename>/etc/profile</filename> or
	    <filename>/etc/csh.login</filename> shell startup files.
	    This example sets the German language:</para>

	  <para>In <filename>/etc/profile</filename>:</para>

	  <programlisting><envar>LANG=de_DE.ISO8859-1; export LANG</envar>
<envar>MM_CHARSET=ISO-8859-1; export MM_CHARSET</envar></programlisting>

	  <para>Or in <filename>/etc/csh.login</filename>:</para>

	  <programlisting><envar>setenv LANG de_DE.ISO8859-1</envar>
<envar>setenv MM_CHARSET ISO-8859-1</envar></programlisting>

	  <para>Alternatively, add the above settings to
	    <filename>/usr/share/skel/dot.profile</filename> or
	    <filename>/usr/share/skel/dot.login</filename>.</para>

	  <para>To configure <application>Xorg</application>, add
	    <emphasis>one</emphasis> of the following to
	    <filename>~/.xinitrc</filename>, depending upon the
	    shell:</para>

	  <programlisting><envar>LANG=de_DE.ISO8859-1; export LANG</envar></programlisting>

	  <programlisting><envar>setenv LANG de_DE.ISO8859-1</envar></programlisting>
	</sect4>
      </sect3>
    </sect2>

    <sect2 xml:id="setting-console">
      <title>Console Setup</title>

      <para>For all single C chars character sets, set the correct
	console fonts in <filename>/etc/rc.conf</filename> for the
	language in question with:</para>

      <programlisting>font8x16=<replaceable>font_name</replaceable>
font8x14=<replaceable>font_name</replaceable>
font8x8=<replaceable>font_name</replaceable></programlisting>

      <para>The <replaceable>font_name</replaceable> is taken from
	<filename>/usr/share/syscons/fonts</filename>,
	without the <filename>.fnt</filename> suffix.</para>

      <indexterm>
	<primary><application>sysinstall</application></primary>
      </indexterm>
      <indexterm><primary>keymap</primary></indexterm>
      <indexterm><primary>screenmap</primary></indexterm>
      <para>The keymap and screenmap for the single C chars character
	set can be set using <command>sysinstall</command>.  Once
	inside <application>sysinstall</application>, choose
	<guimenuitem>Configure</guimenuitem>, then
	<guimenuitem>Console</guimenuitem>.  Alternatively,
	add the following to <filename>/etc/rc.conf</filename>:</para>

      <programlisting>scrnmap=<replaceable>screenmap_name</replaceable>
keymap=<replaceable>keymap_name</replaceable>
keychange="<replaceable>fkey_number sequence</replaceable>"</programlisting>

      <para>The <replaceable>screenmap_name</replaceable> is taken
	from <filename>/usr/share/syscons/scrnmaps</filename>,
	without the <filename>.scm</filename> suffix.  A screenmap
	with a corresponding mapped font is usually needed as a
	workaround for expanding bit 8 to bit 9 on a VGA adapter's
	font character matrix.  This will move letters out of the
	pseudographics area if the screen font uses a bit 8
	column.</para>

      <para>If <application>moused</application> is enabled in
	<filename>/etc/rc.conf</filename>, review the mouse cursor
	information in the next paragraph.</para>

      <indexterm>
	<primary><application>moused</application></primary>
      </indexterm>
      <para>By default, the mouse cursor of the &man.syscons.4; driver
	occupies the 0xd0-0xd3 range in the character set.  If the
	language uses this range, move the cursor's range.  To enable
	this workaround for &os;, add the following line to
	<filename>/etc/rc.conf</filename>:</para>

      <programlisting>mousechar_start=3</programlisting>

      <para>The <replaceable>keymap_name</replaceable> in the above
	example is taken from <filename>/usr/share/syscons/keymaps</filename>,
	without the <filename>.kbd</filename> suffix.  When uncertain
	as to which keymap to use, &man.kbdmap.1; can be used to test
	keymaps without rebooting.</para>

      <para>The <literal>keychange</literal> is usually needed to
	program function keys to match the selected terminal type
	because function key sequences cannot be defined in the key
	map.</para>

      <para>Be sure to set the correct console terminal type in
	<filename>/etc/ttys</filename> for all virtual terminal
	entries.  Current pre-defined correspondences are:</para>

      <informaltable frame="none" pgwide="1">
	<tgroup cols="2">
	  <thead>
	    <row>
	      <entry>Character Set</entry>
	      <entry>Terminal Type</entry>
	    </row>
	  </thead>

	  <tbody>
	    <row>
	      <entry>ISO8859-1 or ISO8859-15</entry>
	      <entry><literal>cons25l1</literal></entry>
	    </row>

	    <row>
	      <entry>ISO8859-2</entry>
	      <entry><literal>cons25l2</literal></entry>
	    </row>

	    <row>
	      <entry>ISO8859-7</entry>
	      <entry><literal>cons25l7</literal></entry>
	    </row>

	    <row>
	      <entry>KOI8-R</entry>
	      <entry><literal>cons25r</literal></entry>
	    </row>

	    <row>
	      <entry>KOI8-U</entry>
	      <entry><literal>cons25u</literal></entry>
	    </row>

	    <row>
	      <entry>CP437 (VGA default)</entry>
	      <entry><literal>cons25</literal></entry>
	    </row>

	    <row>
	      <entry>US-ASCII</entry>
	      <entry><literal>cons25w</literal></entry>
	    </row>
	  </tbody>
	</tgroup>
      </informaltable>

      <para>For languages with wide or multibyte characters, use the
	correct &os; port in <filename>/usr/ports/language</filename>.
	Some applications appear as serial terminals to the system.
	Reserve enough terminals in <filename>/etc/ttys</filename>
	for both <application>Xorg</application> and the pseudo-serial
	console.  Here is a partial list of applications for using
	other languages in the console:</para>

      <informaltable frame="none" pgwide="1">
	<tgroup cols="2">
	  <thead>
	    <row>
	      <entry>Language</entry>
	      <entry>Location</entry>
	    </row>
	  </thead>

	  <tbody>
	    <row>
	      <entry>Traditional Chinese (BIG-5)</entry>
	      <entry><package>chinese/big5con</package></entry>
	    </row>

	    <row>
	      <entry>Japanese</entry>
	      <entry><package>japanese/kon2-16dot</package> or
		<package>japanese/mule-freewnn</package></entry>
	    </row>

	    <row>
	      <entry>Korean</entry>
	      <entry><package>korean/han</package></entry>
	    </row>
	  </tbody>
	</tgroup>
      </informaltable>
    </sect2>

    <sect2>
      <title>Xorg Setup</title>

      <para>Although <application>Xorg</application> is not installed
	with &os;, it can be installed from the Ports Collection.
	Refer to <xref linkend="x11"/> for more information on
	how to do this.  This section discusses how to localize
	<application>Xorg</application> once it is installed.</para>

      <para>Application specific <acronym>i18n</acronym> settings such
	as fonts and menus can be tuned in
	<filename>~/.Xresources</filename>.</para>

      <sect3>
	<title>Displaying Fonts</title>

	<indexterm><primary>Xorg True Type font
	    server</primary></indexterm>
	<para>After installing
	  <package>x11-servers/xorg-server</package>,
	  install the language's &truetype; fonts.  Setting the
	  correct locale should allow users to view their selected
	  language in graphical application menus.</para>
      </sect3>

      <sect3>
	<title>Inputting Non-English Characters</title>

	<indexterm><primary>X Input Method
	    (XIM)</primary></indexterm>

	<para>The X Input Method (<acronym>XIM</acronym>) protocol
	  is an input standard for <application>Xorg</application>
	  clients.  All <application>Xorg</application> applications
	  should be written as XIM clients that take input from XIM
	  input servers.  There are several XIM servers available for
	  different languages.</para>
      </sect3>
    </sect2>

    <sect2>
      <title>Printer Setup</title>

      <para>Some single C chars character sets are hardware coded
	into printers.  Wide or multibyte character sets require
	special setup using a utility such as
	<application>apsfilter</application>.  Documents can be
	converted to &postscript; or PDF formats using language
	specific converters.</para>
    </sect2>

    <sect2>
      <title>Kernel and File Systems</title>

      <para>The &os; fast filesystem (<acronym>FFS</acronym>) is 8-bit
	clean, so it can be used with any single C chars character
	set.  However, character set names are not stored in the
	filesystem as it is raw 8-bit and does not understand encoding
	order.  Officially, <acronym>FFS</acronym> does not support
	any form of wide or multibyte character sets.  However, some
	wide or multibyte character sets have independent patches for
	enabling support on <acronym>FFS</acronym>.  Refer to the
	respective languages' web sites for more information and the
	patch files.</para>

      <indexterm><primary>DOS</primary></indexterm>
      <indexterm><primary>Unicode</primary></indexterm>
      <para>&os;'s support for the &ms-dos; filesystem has the
	configurable ability to convert between &ms-dos;, Unicode
	character sets, and chosen &os; filesystem character sets.
	Refer to &man.mount.msdosfs.8; for details.</para>
    </sect2>
  </sect1>

  <sect1 xml:id="l10n-compiling">
    <title>Compiling <acronym>i18n</acronym> Programs</title>

    <para>Many applications in the &os; Ports Collection have been
      ported with <acronym>i18n</acronym> support.  Some of these
      include <literal>-i18n</literal> in the port name.  These
      and many other programs have built in support for
      <acronym>i18n</acronym> and need no special
      consideration.</para>

    <indexterm>
      <primary><application>MySQL</application></primary>
    </indexterm>
    <para>However, some applications such as
      <application>MySQL</application> need to have their
      <filename>Makefile</filename> configured with the specific
      charset.  This is usually done in the port's
      <filename>Makefile</filename> or by passing a value to
      <application>configure</application> in the source.</para>
  </sect1>

  <sect1 xml:id="lang-setup">
    <title>Localizing &os; to Specific Languages</title>

    <sect2 xml:id="ru-localize">
      <info><title>Russian Language (KOI8-R Encoding)</title>
	<authorgroup>
	  <author><personname><firstname>Andrey</firstname><surname>Chernov</surname></personname><contrib>Originally contributed by </contrib></author>
	</authorgroup>
      </info>
      

      <indexterm>
	<primary>localization</primary>
	<secondary>Russian</secondary>
      </indexterm>

      <para>For more information about KOI8-R encoding, refer to
	<link xlink:href="http://koi8.pp.ru/">KOI8-R References
	  (Russian Net Character Set)</link>.</para>

      <sect3>
	<title>Locale Setup</title>

	<para>To set this locale, put the following lines into each
	  user's <filename>~/.login_conf</filename>:</para>

	<programlisting>me:My Account:\
	:charset=KOI8-R:\
	:lang=ru_RU.KOI8-R:</programlisting>
      </sect3>

      <sect3>
	<title>Console Setup</title>

	<itemizedlist>
	  <listitem>
	    <para>Add the following lines to
	      <filename>/etc/rc.conf</filename>:</para>

	    <programlisting>keymap="ru.koi8-r"
scrnmap="koi8-r2cp866"
font8x16="cp866b-8x16"
font8x14="cp866-8x14"
font8x8="cp866-8x8"
mousechar_start=3</programlisting>
	  </listitem>

	  <listitem>
	    <para>For each <literal>ttyv</literal> entry in
	      <filename>/etc/ttys</filename>, use
	      <literal>cons25r</literal> as the terminal type.</para>
	  </listitem>
	</itemizedlist>
      </sect3>

      <sect3>
	<title>Printer Setup</title>

	<indexterm><primary>printers</primary></indexterm>
	<para>Since most printers with Russian characters come with
	  hardware code page CP866, a special output filter is needed
	  to convert from KOI8-R to CP866.  &os; installs a default
	  filter as <filename>/usr/libexec/lpr/ru/koi2alt</filename>.
	  A Russian printer <filename>/etc/printcap</filename> entry
	  should look like:</para>

	<programlisting>lp|Russian local line printer:\
	:sh:of=/usr/libexec/lpr/ru/koi2alt:\
	:lp=/dev/lpt0:sd=/var/spool/output/lpd:lf=/var/log/lpd-errs:</programlisting>

	<para>Refer to &man.printcap.5; for a more detailed
	  description.</para>
      </sect3>

      <sect3>
	<title>&ms-dos; and Russian Filenames</title>

	<para>The following example &man.fstab.5; entry enables
	  support for Russian filenames in mounted &ms-dos;
	  filesystems:</para>

	<programlisting>/dev/ad0s2      /dos/c  msdos   rw,-Lru_RU.KOI8-R 0 0</programlisting>

	<para><option>-L</option> selects the locale name.  Refer to
	  &man.mount.msdosfs.8; for more details.</para>
      </sect3>

      <sect3>
	<title><application>Xorg</application> Setup</title>

	<orderedlist>
	  <listitem>
	    <para>First, configure the
	      <link linkend="setting-locale">non-X locale
		setup</link>.</para>
	  </listitem>

	  <listitem>
	    <para>When using <application>&xorg;</application>,
	      install the <package>x11-fonts/xorg-fonts-cyrillic</package>
	      package.</para>

	    <para>Check the <literal>"Files"</literal> section in
	      <filename>/etc/X11/xorg.conf</filename>.  The
	      following line must be added <emphasis>before</emphasis>
	      any other <literal>FontPath</literal> entries:</para>

	    <programlisting>FontPath   "/usr/local/lib/X11/fonts/cyrillic"</programlisting>

	    <note>
	      <para>Search the Ports Collection for more Cyrillic
		fonts.</para>
	    </note>
	  </listitem>

	  <listitem>
	    <para>To activate a Russian keyboard, add the following
	      to the <literal>"Keyboard"</literal> section of
	      <filename>/etc/xorg.conf</filename>:</para>

	    <programlisting>Option "XkbLayout"   "us,ru"
Option "XkbOptions"  "grp:toggle"</programlisting>

	    <para>Make sure that <literal>XkbDisable</literal> is
	      commented out in that file.</para>

	    <para>For <literal>grp:toggle</literal> use
	      <keycap>Right Alt</keycap>, for
	      <literal>grp:ctrl_shift_toggle</literal> use <keycombo action="simul"><keycap>Ctrl</keycap><keycap>Shift</keycap></keycombo>.
	      For <literal>grp:caps_toggle</literal> use
	      <keycap>CapsLock</keycap>.  The old
	      <keycap>CapsLock</keycap> function is still available
	      in LAT mode only using <keycombo action="simul"><keycap>Shift</keycap><keycap>CapsLock</keycap></keycombo>.
	      <literal>grp:caps_toggle</literal>
	      does not work in <application>&xorg;</application> for
	      some unknown reason.</para>

	    <para>If the keyboard has <quote>&windows;</quote> keys,
	      and some non-alphabetical keys are mapped incorrectly,
	      add the following line to
	      <filename>/etc/xorg.conf</filename>:</para>

	    <programlisting>Option "XkbVariant" ",winkeys"</programlisting>

	    <note>
	      <para>The Russian XKB keyboard may not work with
		non-localized applications.</para>
	    </note>
	  </listitem>
	</orderedlist>

	<note>
	  <para>Minimally localized applications should call a
	    <function>XtSetLanguageProc (NULL, NULL, NULL);</function>
	    function early in the program.</para>

	  <para>See <link xlink:href="http://koi8.pp.ru/xwin.html">
	      KOI8-R for X Window</link> for more instructions on
	    localizing <application>Xorg</application>
	    applications.</para>
	</note>
      </sect3>
    </sect2>

    <sect2>
      <title>Traditional Chinese Localization for Taiwan</title>

      <indexterm>
	<primary>localization</primary>
	<secondary>Traditional Chinese</secondary>
      </indexterm>
      <para>The &os;-Taiwan Project has a Chinese HOWTO for
	&os; at <uri xlink:href="http://netlab.cse.yzu.edu.tw/~statue/freebsd/zh-tut/">http://netlab.cse.yzu.edu.tw/~statue/freebsd/zh-tut/</uri>
	using many Chinese ports.  The current editor for the
	<literal>&os; Chinese HOWTO</literal> is Shen Chuan-Hsing
	<email>statue@freebsd.sinica.edu.tw</email>.</para>
    </sect2>

    <sect2>
      <title>German Language Localization for All ISO 8859-1
	Languages</title>

      <indexterm>
	<primary>localization</primary>
	<secondary>German</secondary>
      </indexterm>

      <para>Slaven Rezic <email>eserte@cs.tu-berlin.de</email> wrote a
	tutorial on using umlauts on &os;.  The tutorial
	is written in German and is available at <uri xlink:href="http://user.cs.tu-berlin.de/~eserte/FreeBSD/doc/umlaute/umlaute.html">http://user.cs.tu-berlin.de/~eserte/FreeBSD/doc/umlaute/umlaute.html</uri>.</para>
    </sect2>

    <sect2>
      <title>Greek Language Localization</title>

      <indexterm>
	<primary>localization</primary>
	<secondary>Greek</secondary>
      </indexterm>
      <para>Nikos Kokkalis <email>nickkokkalis@gmail.com</email> has
	written a complete article on Greek support in &os;.  It is
	available <link xlink:href="&url.doc.base;/el_GR.ISO8859-7/articles/greek-language-support/index.html">here</link>,
	in Greek only, as part of the official &os; Greek
	documentation.</para>
    </sect2>

    <sect2>
      <title>Japanese and Korean Language Localization</title>

      <indexterm>
	<primary>localization</primary>
	<secondary>Japanese</secondary>
      </indexterm>
      <indexterm>
	<primary>localization</primary>
	<secondary>Korean</secondary>
      </indexterm>
      <para>For Japanese, refer to
	<uri xlink:href="http://www.jp.FreeBSD.org/">http://www.jp.FreeBSD.org/</uri>,
	and for Korean, refer to
	<uri xlink:href="http://www.kr.FreeBSD.org/">http://www.kr.FreeBSD.org/</uri>.</para>
    </sect2>

    <sect2>
      <title>Non-English &os; Documentation</title>

      <para>Some &os; contributors have translated parts of the
	&os; documentation to other languages.  They are available
	through links on the
	<link xlink:href="&url.base;/index.html">main site</link> or in
	<filename>/usr/share/doc</filename>.</para>
    </sect2>
  </sect1>
</chapter>
