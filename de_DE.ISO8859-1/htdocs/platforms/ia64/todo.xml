<?xml version="1.0" encoding="iso-8859-1"?>
<!DOCTYPE html PUBLIC "-//FreeBSD//DTD XHTML 1.0 Transitional-Based Extension//EN"
"http://www.FreeBSD.org/XML/share/xml/xhtml10-freebsd.dtd" [
<!ENTITY email "freebsd-ia64">
<!ENTITY title "FreeBSD/ia64 Project">
]>

<!--
  $FreeBSDde: de-www/platforms/ia64/todo.xsl,v 1.16 2011/06/05 17:57:18 jkois Exp $
  $FreeBSD$
  basiert auf: 1.11
-->

<html xmlns="http://www.w3.org/1999/xhtml">
  <head>
      <title>&title;</title>

      <cvs:keyword xmlns:cvs="http://www.FreeBSD.org/XML/CVS">$FreeBSD$</cvs:keyword>
    </head>

  <body class="navinclude.developers">
              <img align="right" alt="Montecito die" src="&enbase;/platforms/ia64/montecito-die.png"/>

	      <p>Die FreeBSD/ia64-PR-Datenbank durchsuchen:</p>

		<form action="http://www.FreeBSD.org/cgi/query-pr-summary.cgi" method="get">
		  <input type="hidden" name="category" value="ia64"/>
		  <input type="hidden" name="sort" value="none"/>
		  <input type="text" name="text"/>
		  <input type="submit" value="Los"/>
		</form>

	<h3>Was noch getan werden muss</h3>

	<p>Diese Seite ist Ausgangspunkt für Leute, die Aufgaben
	  suchen.  Die Reihenfolge der Aufgaben auf dieser Seite ist
	  nicht immer ein Hinweis auf deren Priorität, in der
	  Regel aber schon.  Nicht alle Aufgaben finden hier
	  Erwähnung, das bedeutet jedoch nicht, dass diese nicht
	  zu erledigen sind.  Ein typisches Beispiel ist das
	  Instandhalten der ia64 Webseiten ...
	  unglücklicherweise.</p>

	<h4>Auf dem Weg zur Tier 1 Plattform</h4>

	<p>Nach zwei Veröffentlichungen als Tier&nbsp;2 Plattform,
	  wird es Zeit, eine Tier&nbsp;1 Plattform zu werden.  Dies
	  umfasst verschiedene Aufgaben wie:</p>

	<ul>
	  <li>
	    Der Installationsprozess soll eine schon vorhandene
	    GPT mit einer EFI-Partition, die ein anderes
	    Betriebssystem enthält, berücksichtigen.
	    Ein FreeBSD-Eintrag im EFI-Boot-Menü wäre
	    auch ganz nett.
	  </li>
	  <li>
	    Portieren des GNU-Debuggers.  Er wird auf einer
	    Entwicklungsmaschine dringend benötigt und ist
	    für Tier&nbsp;1 Plattformen vorgeschrieben.
	  </li>
	  <li>
	    Portieren des X-Servers (ports/x11/XFree86-4-Server).
	    Dies ist nicht unbedingt Voraussetzung für den
	    Tier&nbsp;1 Status, jedoch wird der X-Server gebraucht,
	    um ia64 als Desktopmaschine zu benutzen.
	  </li>
	</ul>

	<h4>Ports und Packages</h4>

	<p>Wichtig für den Erfolg von FreeBSD auf ia64 sind neben
	  ls(1) weitere laufende Programme.  Unsere umfangreiche
	  Ports-Sammlung ist vor allem auf ia32 ausgerichtet,
	  kein Wunder also, dass viele Ports nicht unter ia64
	  bauen oder laufen.  Es gibt eine aktuelle <a
	  href="http://pointyhat.FreeBSD.org/errorlogs/ia64-8-latest/">Liste
	  der Ports</a>, die sich aus dem ein oder anderen Grund
	  nicht bauen lassen.  Ein Port wird nicht gebaut und nicht
	  gezählt, wenn er von einem Port abhängt, der sich
	  nicht bauen lässt.  Es wäre eine große
	  Hilfe, wenn Sie an Ports arbeiten, von denen viele andere
	  Ports abhängen (siehe die "Aff." Spalte der
	  Tabelle).</p>

	<h4>Feinschliff</h4>

	<p>Es gibt viele Funktionen (vor allem Routinen in
	  Maschinensprache), die ohne Rücksicht auf
	  Geschwindigkeit oder Robustheit geschrieben wurden.  Diese
	  Funktionen können unabhängig von der laufenden
	  Entwicklung ersetzt werden.  Diese Aufgabe setzt auch nicht
	  unbedingt ein riesiges Wissen oder große Erfahrung
	  voraus.</p>

	<h4>Hauptentwicklung</h4>

	<p>Einige Sachen, die noch nicht funktionieren oder die
	  es noch nicht gibt, sind so verzwickt und grundlegend, dass
	  sie auch andere Plattformen betreffen könnten.
	  Unter anderem:</p>

	<ul>
	  <li>
	    UP- und SMP-Stabilität verbessern.  Das
	    Low-Level-Handling der VM-Übersetzungen muss
	    verbessert werden.  Das betrifft die Korrektheit sowie die
	    Performanz.
	  </li>
	  <li>
	    Grundlegende Gerätetreiber wie sio(4) und syscons(4)
	    funktionieren nicht auf ia64 Maschinen, welche keine
	    Unterstützung für Legacy-Geräte haben.
	    Das ist ein großes Problem, da dies alle Plattformen
	    betrifft und eventuell zur Konsequenz hat, dass
	    (große) Teile gewisser Subsysteme neu geschrieben
	    werden müssen.  Auf jeden Fall eine Aufgabe, die
	    groß angelegte Unterstützung und Koordination
	    benötigt.
	  </li>
	  <li>
	    Besserer Umgang mit spärlichen (physischen)
	    Speicherkonfigurationen, in dem das Erstellen von
	    VM-Tabellen, die den ganzen Adressraum umfassen, vermieden
	    wird.  Es sollen besser Speicherteile benutzt werden,
	    die zu Verfügung stehen.  Momentan sind wir
	    gezwungen, aus diesem Grund Speicher zu ignorieren.
	  </li>
	</ul>

  </body>
</html>
