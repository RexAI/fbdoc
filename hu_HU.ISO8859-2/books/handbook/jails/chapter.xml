<?xml version="1.0" encoding="iso-8859-2"?>
<!--
    The FreeBSD Documentation Project

    $FreeBSD$
-->
<!--
    The FreeBSD Hungarian Documentation Project
    Translated by: PALI, Gabor <pgj@FreeBSD.org>
    %SOURCE%	en_US.ISO8859-1/books/handbook/jails/chapter.xml
    %SRCID%	1.21
-->
<chapter xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.0" xml:id="jails" xml:lang="hu">
  <info><title>A jail alrendszer</title>
    <authorgroup>
      <author><personname><firstname>Matteo</firstname><surname>Riondato</surname></personname><contrib>Írta: </contrib></author>
    </authorgroup>
  </info>

  

  <indexterm><primary>jail</primary></indexterm>

  <sect1 xml:id="jails-synopsis">
    <title>Áttekintés</title>

    <para>Ez a fejezet a &os;-ben található jail
      alrendszert, valamint annak használatát mutatja be
      közelebbrõl.  Az jail, melyet gyakran csak úgy
      emlegetnek, mint a <emphasis>chroot környezetek</emphasis>
      továbbfejlesztését, a rendszergazdák
      számára ajánlott, nagyon sokoldalú
      eszköz, de a haladó felhasználók is
      hasznosnak találhatják.</para>

    <para>A fejezet elolvasása során
      megismerjük:</para>

    <itemizedlist>
      <listitem>
	<para>mi is az a jail, milyen célra
	  használható a &os;-ben;</para>
      </listitem>

      <listitem>
	<para>hogyan hozzunk létre, indítsunk el és
	  állítsunk le jaileket;</para>
      </listitem>

      <listitem>
	<para>a létrehozott jailek karbantartásainak
	  alapjait, a jailek belülrõl és
	  kívülrõl egyaránt.</para>
      </listitem>
    </itemizedlist>

    <para>A jail alrendszerrõl még több hasznos
      információt a következõ helyekrõl
      tudhatunk meg:</para>

    <itemizedlist>
      <listitem>
	<para>A &man.jail.8; man oldal.  Ez tartalmazza a
	  <command>jail</command> segédprogram teljes
	  referenciáját &mdash; ez az a
	  karbantartásra használható eszköz,
	  amellyel el tudjuk indítani, le tudjuk
	  állítani és vezérelni tudjuk a
	  jaileket a &os;-ben.</para>
      </listitem>

      <listitem>
	<para>A levelezési listák és azok
	  archívumai.  A &a.questions; archívuma és
	  a &a.mailman.lists;en található többi
	  levelezési lista rengeteg olvasnivalót tartogat
	  a jailekkel kapcsolatban.  Mindig érdemes keresni
	  ezekben az archívumokban, vagy beküldeni a
	  kérdésünket a &a.questions.name;
	  levelezési listára.</para>
      </listitem>
    </itemizedlist>

  </sect1>

  <sect1 xml:id="jails-terms">
    <title>A jail alrendszerhez kapcsolódó
      fogalmak</title>

    <para>A fejezet további részében a
      következõ fogalmakat fogjuk használni, hogy a
      &os; jailekhez tartozó egyes részeit és azok
      belsõ mûködését, valamint
      kapcsolatukat a rendszer többi részével
      még inkább érthetõvé
      tegyük:</para>

    <variablelist>
      <varlistentry>
	<term>&man.chroot.8; (parancs)</term>
	<listitem>
	  <para>Egy segédprogram, amely a &os; &man.chroot.2;
	    rendszerhívásán keresztül egy
	    program és annak leszármazottjainak
	    futtatásához megváltoztatja a rendszer
	    gyökérkönyvtárát (change
	    root).</para>
	</listitem>
      </varlistentry>

      <varlistentry>
	<term>&man.chroot.2; (környezet)</term>
	<listitem>
	  <para>A <quote>chroot</quote> módban futó
	    programok környezete.  Olyan erõforrásokat
	    foglal magában, mint mondjuk az
	    állományrendszer látható
	    része, az elérhetõ
	    felhasználói és csoport
	    azonosítók, hálózati
	    csatolók és egyéb folyamatok közti
	    kommunikációs mechanizmusok stb.</para>
	</listitem>
      </varlistentry>

      <varlistentry>
	<term>&man.jail.8; (parancs)</term>
	<listitem>
	  <para>Az a rendszerkarbantartó segédprogram,
	    amely lehetõvé teszi program
	    elindítását elzárt
	    környezetben.</para>
	</listitem>
      </varlistentry>

      <varlistentry>
	<term>befogadó (rendszer, program,
	  felhasználó stb.)</term>
	<listitem>
	  <para>Az elzárt környezetet
	    irányító rendszer.  A befogadó
	    rendszer hozzá tud férni az összes
	    elérhetõ hardveres erõforráshoz,
	    képes az elzárt környezeten
	    kívül és belül futó
	    programokat vezérelni.  Az egyik legfontosabb
	    különbség a befogadó és az
	    elzárt rendszer között, hogy azok a
	    korlátozások, amelyek az elzárt
	    környezetben rendszeradminisztrátori jogokkal
	    futó programokra vonatkoznak, nem
	    feltétlenül érvényesek a
	    befogadó rendszerben futóakra.</para>
	</listitem>
      </varlistentry>

      <varlistentry>
	<term>befogadott (rendszer, program, felhasználó
	  stb.)</term>
	<listitem>
	  <para>Olyan program, felhasználó vagy más
	    egyéb egyed, amely csak egy jailen keresztül,
	    korlátozottan tud hozzáférni az
	    erõforrásokhoz.</para>
	</listitem>
      </varlistentry>
    </variablelist>

  </sect1>

  <sect1 xml:id="jails-intro">
    <title>Bevezetés</title>

    <para>Mivel a rendszeradminisztráció egy nehéz
      és zavarba ejtõ feladat, rengeteg komoly eszköz
      jött létre a rendszergazdák
      életének megkönnyítésére.
      Ezek az eszközök többnyire a rendszerek
      telepítését,
      beállítását és
      karbantartását igyekeznek valamilyen módon
      jobbá tenni.  A rendszergazdák egyik feladata
      úgy gondoskodni a biztonságról, hogy
      közben a rendszer képes legyen ellátni eredeti
      feladatát.</para>

    <para>A &os; rendszerek biztonságosságának
      növelését hivatott egyik ilyen eszköz a
      <emphasis>jails</emphasis>.  Elõször a &os;&nbsp;4.X
      verziójában bukkant fel, de jelentõs
      fejlõdésen ment keresztül a &os;&nbsp;5.X
      verziókban, aminek köszönhetõen sokkal
      erõteljesebb és rugalmasabb alrendszerré
      vált.  A fejlesztése természetesen most is
      folytatódik tovább, állandóan
      fejlõdik a használhatósága,
      teljesítménye, megbízhatósága
      és biztonságossága.</para>

    <sect2 xml:id="jails-what">
      <title>Mi is az a jail?</title>

      <para>A BSD-szerû operációs rendszerekben
	már a 4.2BSD óta megtalálható volt a
	&man.chroot.2;.  A &man.chroot.8; segédprogrammal meg
	tudjuk megváltoztatni adott programok
	számára a
	gyökérkönyvtárat, és ezzel egy
	biztonságos környezetet teremteni, távol a
	rendszer többi részétõl.  A chroot-tal
	kialakított környezetben elinduló programok
	nem tudnak hozzáférni a rajta kívül
	található állományokhoz és
	erõforrásokhoz.  Ennek okán, ha egy ilyen
	környezetben futó szolgáltatást
	megtámadnak, az önmagában még nem
	teszi lehetõvé a támadó
	számára, hogy elérhesse az egész
	rendszert.  A &man.chroot.8; remekül
	használható olyan egyszerûbb feladatok
	megoldására, amelyek nem igényelnek
	túlságosan sok rugalmasságot vagy bonyolult
	és fejlett támogatást.  A chroot
	ötletének felmerülése óta azonban
	számos kiskaput találtak már az
	általa létrehozott környezetekben, és
	habár ezek mindegyikét javították a
	&os; újabb változataiban, teljesen
	egyértelmûvé vált, hogy a
	&man.chroot.2; nem biztosít járható utat a
	szolgáltatások biztonságossá
	tételéhez.  Erre a feladatra egy új
	alrendszert kellett kiépíteni.</para>

      <para>Ez az egyik oka annak, amiért az
	<emphasis>jaileket</emphasis> kifejlesztették.</para>

      <para>A jailek által képviselt elzárás
	ötlete több szempontból is a hagyományos
	&man.chroot.2; környezet elvén alapszik.  Egy
	hagyományos &man.chroot.2; környezetben futó
	programok korlátozása csupán abban
	merül ki, hogy az állományrendszer melyik
	részét láthatják.  A rendszer
	többi erõforrása (mint mondjuk a
	felhasználók, futó programok vagy a
	hálózati alrendszer) azonban továbbra is
	megosztva marad a chroot környezetben és a
	befogadó rendszerben futó programok
	között.  A jailek által alkalmazott
	megoldás kibõvíti ezt a modellt, és
	nem csak az állományrendszerre vonatkozó
	hozzáférést virtualizálja, hanem
	több más dolog mellett kiterjeszti ezt a
	felhasználókra és a &os;
	hálózati alrendszerére is.  Az
	elzárt környezetek
	beállításaihoz elérhetõ
	finomhangolási lehetõségekrõl
	bõvebben a <xref linkend="jails-tuning"/>ban esik
	szó.</para>

      <para>A jaileket az alább négy elem írja
	le:</para>

      <itemizedlist>
	<listitem>
	  <para>A könyvtárszerkezet egy
	    részfája &mdash; attól a
	    résztõl indulva, ahonnan a jail kezdõdik.
	    A jailen belül futó programok nem
	    léphetnek ki ebbõl a
	    részfából.  Az eredeti &man.chroot.2;
	    kialakításában merengõ
	    biztonsági hibák lehetõségei nem
	    veszélyeztetik a többi &os; jailt.</para>
	</listitem>

	<listitem>
	  <para>A rendszer neve &mdash; a név, amelyet a jailen
	    belül használunk.  Mivel a jaileket
	    elsõsorban hálózati
	    szolgáltatások kordában
	    tartására használjuk, a jailekhez
	    tartozó beszédes rendszernevek sokat tudnak
	    segíteni a rendszergazdák
	    munkájában.</para>
	</listitem>

	<listitem>
	  <para>Egy <acronym>IP</acronym>-cím &mdash; a jailhez
	    tartozik és nem változtatható meg a
	    mûködése során.  Egy jail
	    IP-címe általában egy már
	    létezõ hálózati csatoló
	    másik címe, de ez nem
	    szükségszerûen igaz minden esetben.</para>
	</listitem>

	<listitem>
	  <para>Egy parancs &mdash; annak a programnak az
	    elérési útja, amelyet elzártan
	    kívánunk futtatni.  Az elzárt
	    környezet gyökerétõl mérve
	    relatívan adjuk meg, és az adott
	    környezet típusától
	    függõen eltérõ lehet.</para>
	</listitem>
      </itemizedlist>

      <para>Ezektõl eltekintve a jailek rendelkezhetnek
	saját felhasználókkal és lehetnek
	saját <systemitem class="username">root</systemitem>
	felhasználóik is.  Természetesen a
	<systemitem class="username">root</systemitem> hatásköre csak az
	elzárt környezetre korlátozódik,
	és a befogadó rendszer
	szemszögébõl az elzárt
	<systemitem class="username">root</systemitem> nem mindenható.
	Ráadásul az elzárt
	<systemitem class="username">root</systemitem> felhasználó nem hajthat
	végre semmilyen kritikus mûveletet a saját
	&man.jail.8; környezetén kívül.  A
	<systemitem class="username">root</systemitem> további
	képességeirõl és
	korlátozásairól lentiekben bõvebben is
	említést teszünk a <xref linkend="jails-tuning"/>ban.</para>

    </sect2>
  </sect1>

  <sect1 xml:id="jails-build">
    <title>A jailek létrehozása és
      vezérlése</title>

    <para>Egyes rendszergazdák a jaileket a következõ
      két típusba sorolják: <quote>teljes</quote>
      jail, mely egy valódi &os; rendszerre emlékeztet,
      és a <quote>szolgáltatás</quote> jail, mely
      egyetlen, feltehetõen kiemelt jogokkal futó
      alkalmazás vagy szolgáltatás
      számára van elõkészítve.  Ez a
      besorolás csupán fogalmi szintû, a jail
      felépítésének módját nem
      befolyásolja.  A &man.jail.8; man oldal részletesen
      ismerteti a jailek létrehozását:</para>

    <screen>&prompt.root; <userinput>setenv D /itt/lesz/a/jail</userinput>
&prompt.root; <userinput>mkdir -p $D</userinput> <co xml:id="jailpath"/>
&prompt.root; <userinput>cd /usr/src</userinput>
&prompt.root; <userinput>make buildworld</userinput> <co xml:id="jailbuildworld"/>
&prompt.root; <userinput>make installworld DESTDIR=$D</userinput> <co xml:id="jailinstallworld"/>
&prompt.root; <userinput>make distribution DESTDIR=$D</userinput> <co xml:id="jaildistrib"/>
&prompt.root; <userinput>mount -t devfs devfs $D/dev</userinput> <co xml:id="jaildevfs"/></screen>

    <calloutlist>
      <callout arearefs="jailpath">
	<para>Érdemes elõször a jail helyét
	  megválasztani.  Itt fog fizikailag helyet foglalni a
	  befogadó rendszer
	  állományrendszerén belül a jail.
	  Jó választás lehet erre a <filename>/usr/jail/jailnév</filename>,
	  ahol a <replaceable>jailnév</replaceable> a jailt
	  azonosító rendszernév.  A <filename>/usr/</filename>
	  állományrendszeren általában
	  elegendõ hely jut a jail
	  állományrendszerének, ami egy
	  <quote>teljes</quote> jail esetén
	  lényegében a &os; alaprendszer
	  alapértelmezett telepítésében
	  megtalálható összes állomány
	  másolatát tartalmazza.</para>
      </callout>

      <callout arearefs="jailbuildworld">
	<para>Ha korábban már a <command>make
	  world</command> vagy a <command>make buildworld</command>
	  parancs segítségével
	  újrafordítottuk az alaprendszert, akkor ezt a
	  lépést ki is hagyhatjuk és
	  telepítsük az új alaprendszert
	  közvetlenül az új jailbe.</para>
      </callout>

      <callout arearefs="jailinstallworld">
	<para>Ez a parancs fogja felmásolni a jail fizikai
	  helyének választott
	  könyvtár-részfába a
	  mûködéshez szükséges programokat,
	  függvénykönyvtárakat, man oldalakat
	  és így tovább.</para>
      </callout>

      <callout arearefs="jaildistrib">
	<para>A <application>make</application>
	  paramétereként megadott
	  <buildtarget>distribution</buildtarget> cél gondoskodik
	  az összes szükséges
	  konfigurációs állomány
	  felmásolásáról.  Magyarán
	  szólva, átmásolja az összes
	  telepíhetõ állományt a <filename>/usr/src/etc/</filename>
	  könyvtárból a jail <filename>/etc</filename>
	  alkönyvtárába, vagyis a <filename>$D/etc/</filename>
	  könyvtárba.</para>
      </callout>

      <callout arearefs="jaildevfs">
	<para>A jaileken belül a &man.devfs.8;
	  csatlakoztatása nem kötelezõ.
	  Másrészt azonban majdnem mindegyik
	  alkalmazás, a feladatától
	  függõen, legalább egy eszközhöz
	  hozzá akar férni.  Nagyon fontos, hogy a
	  kezünkbe vegyük a eszközök
	  hozzáférésének
	  irányítását a jaileken belül,
	  mivel a helytelen beállítások
	  révén a támadók csúnya
	  dolgokat tudnak majd mûvelni.  A &man.devfs.8;
	  mûködését a &man.devfs.8; és
	  &man.devfs.conf.5; man oldalakon is ismertetett
	  szabályrendszerek
	  irányítják.</para>
      </callout>
    </calloutlist>

    <para>Ahogy a jailt telepítettük, a &man.jail.8;
      segédprogrammal tudjuk elindítani.  A &man.jail.8;
      négy kötelezõ paramétert vár,
      melyekre a <xref linkend="jails-what"/>ban ki is
      térünk.  Más paramétereket is
      megadhatunk, például azt, hogy az elzárt
      program egy adott felhasználó jogaival fusson.  A
      <option><replaceable>command</replaceable></option>
      paraméter használata a jail
      típusától függ: egy
      <emphasis>virtuális rendszer</emphasis> esetében a
      <filename>/etc/rc</filename> jó választásnak
      bizonyulhat, mivel ennek segítségével egy
      valódi &os; rendszerindítási
      folyamatát játszhatjuk le.  Amennyiben elzárt
      <emphasis>szolgáltatás</emphasis>ról van
      szól, az adott szolgáltatástól vagy
      alkalmazástól függ.</para>

    <para>A jaileket gyakran már a rendszerindítás
      során elindítják, amit a &os;
      <filename>rc</filename> mechanizmusa nagyban meg is
      könnyít.</para>

    <procedure>
      <step>
	<para>A rendszer indítása során
	  aktiválandó jailek listáját
	  vegyük hozzá a &man.rc.conf.5;
	  állományhoz:</para>

	<programlisting>jail_enable="YES"   # Ide NO-t írjunk, ha ki akarjuk kapcsolni
jail_list="<replaceable>www</replaceable>"     # Szóközzel elválasztva soroljuk fel a jaileket</programlisting>

	<note>
	  <para>A <varname>jail_list</varname>
	    értékeként felsorolt jailek nevei csak
	    betûket és számjegyeket
	    tartalmazhatnak.</para>
	</note>
      </step>

      <step>
	<para>A <varname>jail_list</varname>-ben szereplõ
	  összes jailt meg kell adnunk az ezeket
	  leíró &man.rc.conf.5;-beli
	  beállításokat:</para>

	<programlisting>jail_<replaceable>www</replaceable>_rootdir="/usr/jail/www"     # a jail gyökérkönyvtára
jail_<replaceable>www</replaceable>_hostname="<replaceable>www</replaceable>.example.org"  # a jail neve
jail_<replaceable>www</replaceable>_ip="192.168.0.10"           # a jail IP-címe
jail_<replaceable>www</replaceable>_devfs_enable="YES"          # legyen-e devfs a jailen belül
jail_<replaceable>www</replaceable>_devfs_ruleset="<replaceable>www_ruleset</replaceable>" # az alkalmazott devfs szabályrendszer</programlisting>

	<para>Az &man.rc.conf.5; állományban szereplõ
	  jailek esetén a <filename>/etc/rc</filename> szkript
	  fut le, tehát feltételezi, hogy az így
	  megadott jail egy teljes virtuális rendszer.  A
	  szolgáltatások jailbe foglalásához
	  meg kell változtatnunk a jail alapértelmezett
	  parancsát is.  Ezt a
	  <varname>jail_<replaceable>jailnév</replaceable>_exec_start</varname>
	  opció megfelelõ
	  beállításával tudjuk
	  megtenni.</para>

	<note>
	  <para>Az összes itt elérhetõ opciót a
	    &man.rc.conf.5; man oldalon találhatjuk meg.</para>
	</note>
      </step>
    </procedure>

    <para>Ha léteznek a megfelelõ bejegyzések az
      <filename>rc.conf</filename> állományban, akkor az
      <filename>/etc/rc.d/jail</filename> szkript is
      használható arra, hogy a jaileket kézzel
      indítsuk el vagy állítsuk le:</para>

    <screen>&prompt.root; <userinput>/etc/rc.d/jail start www</userinput>
&prompt.root; <userinput>/etc/rc.d/jail stop www</userinput></screen>

    <para>A &man.jail.8; leállítására jelen
      pillanatban még nem érhetõ el szabályos
      módszer.  Ez azért van, mert a szabályos
      rendszerleállítást elvégzõ
      parancsok nem használhatóak a jailen belül.
      Emiatt a jaileket a legtisztábban úgy tudjuk
      leállítani, ha kiadjuk az alábbi parancsot
      magában a jailben vagy pedig a &man.jexec.8;
      segédprogrammal a jailen kívülrõl:</para>

    <screen>&prompt.root; <userinput>sh /etc/rc.shutdown</userinput></screen>

    <para>Errõl a témáról többet a
      &man.jail.8; man oldalon olvashatunk.</para>

  </sect1>

  <sect1 xml:id="jails-tuning">
    <title>Finomhangolás és karbantartás</title>

    <para>Számos opció állítható be a
      jaileknél, és sokféle módon
      vegyíthetjük a befogadó &os; rendszerünket
      a jailekkel, ami által magasabb szintû
      alkalmazásokat hozhatunk létre.  Ebben a
      részben bemutatunk:</para>

    <itemizedlist>
      <listitem>
	<para>Néhány olyan
	  beállítást, amellyel finomhangolhatjuk a
	  telepített jailek által
	  megvalósított biztonsági
	  megszorítások viselkedését.</para>
      </listitem>

      <listitem>
	<para>A jailek kezelésére alkalmas
	  néhány olyan magasabb szintû
	  alkalmazást, amelyek elérhetõek a &os;
	  Portgyûjteményén keresztül, és
	  általános jail alapú megoldások
	  kialakításához
	  használhatóak.</para>
	    </listitem>
    </itemizedlist>

    <sect2 xml:id="jails-tuning-utilities">
      <title>A &os;-ben található finomhangoló
	eszközök</title>

      <para>A jailek beállításainak
	finomhangolását túlnyomórészt
	&man.sysctl.8; változókkal végezhetjük
	el.  A sysctl-en belül egy speciális
	részfában találhatunk erre alkalmas
	beállításokat: ez a a &os; rendszermag
	opciói között megtalálható
	<varname>security.jail.*</varname>.  Itt közüljük
	a jailekre vonatkozó fontosabb sysctl
	változók listáját, az
	alapértelmezett értékeikkel együtt.  A
	nevek minden bizonnyal sokat elárulnak, de ha többet
	szeretnénk tudni róluk, lapozzuk fel a
	&man.jail.8; és &man.sysctl.8; man oldalakat.</para>

      <itemizedlist>
	<listitem>
	  <para><varname>security.jail.set_hostname_allowed:
	     1</varname></para>
	</listitem>

	<listitem>
	  <para><varname>security.jail.socket_unixiproute_only:
	     1</varname></para>
	</listitem>

	<listitem>
	  <para><varname>security.jail.sysvipc_allowed:
	     0</varname></para>
	</listitem>

	<listitem>
	  <para><varname>security.jail.enforce_statfs:
	     2</varname></para>
	</listitem>

	<listitem>
	  <para><varname>security.jail.allow_raw_sockets:
	     0</varname></para>
	</listitem>

	<listitem>
	  <para><varname>security.jail.chflags_allowed:
	    0</varname></para>
	</listitem>

	<listitem>
	  <para><varname>security.jail.jailed: 0</varname></para>
	</listitem>
      </itemizedlist>

      <para>Ezekkel a változókkal a
	<emphasis>befogadó rendszer</emphasis>
	rendszergazdája tud hozzátenni vagy elvenni a
	<systemitem class="username">root</systemitem> felhasználó
	alapértelmezett határaihoz.  Vegyük azonban
	észre, hogy egyes korlátozások azonban
	semmiképpen sem szüntethetõek meg.  A
	<systemitem class="username">root</systemitem> nem csatlakoztathat és
	választhat le állományrendszereket a
	&man.jail.8; környezetben.  Az elzárt
	<systemitem class="username">root</systemitem> nem tölthet be és
	törölhet &man.devfs.8; szabályrendszereket,
	tûzfal szabályokat sem, ill.  nem végezhet
	semmilyen olyan bármilyen más karbantartási
	feladatot, amely a rendszermag adataiban
	módosítást vonna maga után,
	például nem állíthatja a rendszermag
	<varname>securelevel</varname> (biztonsági
	szintjének) értékét.</para>

      <para>A &os; alaprendszere tartalmazza azokat a
	segédeszközöket, amelyekkel a rendszerben
	aktív jailek információt tudjuk
	megjeleníteni, vagy csatlakozni tudunk hozzájuk.
	A &man.jls.8; és &man.jexec.8; parancsok részei az
	alap &os; rendszernek, segítségükkel
	elvégezhetõek az alábbi egyszerû
	feladatokat:</para>

      <itemizedlist>
	<listitem>
	  <para>Ki tudjuk íratni az aktív jailek és
	    hozzájuk tartozó azonosítókat
	    (<acronym>JID</acronym>-eket),
	    <acronym>IP</acronym>-címeket, neveket és
	    útvonalakat.</para>
	</listitem>

	<listitem>
	  <para>A befogadó rendszerbõl hozzá tudunk
	    csatlakozni egy futó jailhez, és parancsokat
	    tudunk futtatni a jailen belül vagy
	    karbantartási feladatokat tudunk elvégezni
	    magán a jailen belül.  Ez
	    különösen hasznosnak bizonyulhat, amikor a
	    <systemitem class="username">root</systemitem> felhasználó
	    szabályosan le akarja állítani a jailt.
	    A &man.jexec.8; segédprogrammal el tudunk
	    indítani egy parancsértelmezõt a jailen
	    belül, amibõl aztán
	    irányíthatjuk.  Példa:</para>

	  <screen>&prompt.root; <userinput>jexec 1 tcsh</userinput></screen>
	</listitem>
      </itemizedlist>

    </sect2>

    <sect2 xml:id="jails-tuning-admintools">
      <title>Magasszintû karbantartó eszközök a
	&os; Portgyûjteményében</title>

      <para>A sok külsõ karbantartó eszköz
	közül az egyik legteljesebb és leghasznosabb a
	<package>sysutils/jailutils</package>.  Sok
	kisebb alkalmazást tartalmaz, melyek
	kibõvítik a &man.jail.8;
	irányíthatóságát.
	Bõvebb információkért
	kérjük, látogassa meg a
	hozzá tartozó honlapot.</para>

    </sect2>
  </sect1>

  <sect1 xml:id="jails-application">
    <title>A jailek alkalmazása</title>

    <sect2 xml:id="jails-service-jails">
      <info><title>Szolgáltatások jailbe
	foglalása</title>
	<authorgroup>
	  <author><personname><firstname>Daniel</firstname><surname>Gerzo</surname></personname><contrib>Írta: </contrib></author>
	</authorgroup>
      </info>

      

      <para>Ez a rész eredetileg &a.simon; <uri xlink:href="http://simon.nitro.dk/service-jails.html">http://simon.nitro.dk/service-jails.html</uri> oldalon
	található írásán, valamint
	Ken Tom (<email>locals@gmail.com</email>) átdolgozott
	cikkén alapul.  Itt megismerhetjük, hogyan
	állítsunk be a &os; rendszerünkben egy
	biztonsági réteget a &man.jail.8;
	felhasználásával.  Továbbá
	feltételezzük, hogy ez a rendszer legalább
	RELENG_6_0 verziójú és a fejezetben
	korábban tárgyaltakat az olvasó teljes
	mértékben megértette.</para>

      <sect3 xml:id="jails-service-jails-design">
	<title>A kialakítás</title>

	<para>A jailek egyik legnagyobb gondja a frissítés
	  folyamatának lebonyolítása.  Azért
	  jelent ez egyre inkább gondot, mert minden egyes jailt
	  újra fel kell építenünk a
	  frissítése során.  Ez többnyire nem
	  okoz gondot egyetlen jail használata során,
	  mivel maga a frissítési folyamat
	  meglehetõsen egyszerû, azonban igen
	  idõigényessé és
	  fárasztóvá tud válni több
	  jail esetében.</para>

	<warning>
	  <para>Ez a példa a &os; képességeinek
	    haladó szintû ismeretét követeli
	    meg.  Amennyiben az itt bemutatott lépesek
	    túlságosan is bonyolultnak
	    tûnnének, érdemes olyan egyszerûbb
	    rendszerek után nézni, mint mondjuk a
	    <package>sysutils/ezjail</package>, amely
	    egy egyszerûbb módszert kínál fel
	    a &os;-ben használt jailek
	    karbantartására, és nem is annyira
	    bonyolult, mint ez a példa.</para>
	</warning>

	<para>A bemutatandó példa célja, hogy
	  feloldja az ilyen jellegû problémákat,
	  és ezért igyekszik a jailek között
	  mindent megosztani, ami csak lehetséges.  Mindezt
	  biztonságosan éri el &mdash;
	  írásvédett &man.mount.nullfs.8;
	  állományrendszer használatával,
	  aminek köszönhetõen a frissítés
	  maga egyszerûbbé, az egyes
	  szolgáltatások
	  különzárása pedig
	  vonzóbbá válik.  Ráadásul
	  egyúttal egy nagyon egyszerû módszert mutat
	  az új jailek hozzáadására
	  és a régi törlésére
	  ugyanúgy, mint a
	  frissítésükre.</para>

	<note>
	  <para>Például ilyen
	    szolgáltatásokat kívánunk
	    szabályozni: egy <acronym>HTTP</acronym> szervert,
	    egy <acronym>DNS</acronym> szervert, egy
	    <acronym>SMTP</acronym> szervert és így
	    tovább.</para>
	</note>

	<para>Az itt szereplõ beállítás
	  céljai:</para>

	<itemizedlist>
	  <listitem>
	    <para>Készítsünk egy egyszerûen
	      és könnyen átlátható
	      jailkezelési rendszert.  Ebbõl tehát
	      következik, hogy <emphasis>ne</emphasis> kelljen
	      lefuttatni a teljes rendszer
	      telepítését minden egyes
	      jailre.</para>
	  </listitem>
	  <listitem>
	    <para>Könnyítsük meg az új jailek
	      hozzáadását és a régiek
	      eltávolítását.</para>
	  </listitem>
	  <listitem>
	    <para>Könnyítsük meg a már
	      létezõ jailek frissítését
	      és cseréjét.</para>
	  </listitem>
	  <listitem>
	    <para>Tegyük lehetõvé saját &os;
	      ágak futtatását.</para>
	  </listitem>
	  <listitem>
	    <para>Legyünk különösen
	      körültekintõek a biztonság
	      tekintetében, és igyekezzünk
	      minél jobban csökkenteni veszély
	      kockázatát.</para>
	  </listitem>
	  <listitem>
	    <para>Takarékoskodjunk a tárhellyel és
	      az állományrendszerrel, amennyire csak
	      lehet.</para>
	  </listitem>
	</itemizedlist>

	<para>Ahogy azt már korábban is
	  említettük, ez a kialakítás nagyban
	  építkezik egyetlen fõ sablonra, amely
	  írásvédetten kerül
	  csatlakoztatásra (<application>nullfs</application>en
	  keresztül) az egyes jailekben, valamint jailenként
	  egy-egy írható-olvasható eszközre.
	  Ez az eszköz lehet egy külön fizikai lemez, egy
	  partíció vagy egy vnode alapú &man.md.4;
	  eszköz.  Ebben a példában
	  írható-olvasható
	  <application>nullfs</application> csatlakozásokat
	  használunk.</para>

	<para>Az állományrendszer kiosztása a most
	  következõ listában szerepel:</para>

	<itemizedlist>
	  <listitem>
	    <para>Minden jailt a <filename>/home/j</filename>
	      könyvtárban csatlakoztatunk.</para>
	  </listitem>
	  <listitem>
	    <para>A <filename>/home/j/mroot</filename>
	      lesz az összes jail sablonja és
	      mindegyikük számára
	      írásvédett.</para>
	  </listitem>
	  <listitem>
	    <para>Minden jailnek létrehozunk egy üres
	      alkönyvtárat a <filename>/home/j</filename>
	      könyvtárban.</para>
	  </listitem>
	  <listitem>
	    <para>Minden jailnek lesz egy <filename>/s</filename> alkönyvtára,
	      amelyet a rendszer írható-olvasható
	      részére irányítunk.</para>
	  </listitem>
	  <listitem>
	    <para>Minden jailnek lesz egy saját
	      írható-olvasható része, amely
	      a <filename>/home/j/skel</filename>
	      könyvtáron alapszik.</para>
	  </listitem>
	  <listitem>
	    <para>Mindegyik elzárt terület (a jailek
	      írható-olvasható része) a
	      <filename>/home/js</filename>
	      könyvtárban jön létre.</para>
	  </listitem>
	</itemizedlist>

	<note>
	  <para>Ez a kiosztás feltételezi, hogy a jaileket
	    a <filename>/home</filename>
	    partíción hozzuk létre.  Ez
	    természetesen bármi másra
	    megváltoztatható, de akkor figyelnünk
	    kell erre minden egyes parancs kiadása
	    elõtt.</para>
	</note>

      </sect3>

      <sect3 xml:id="jails-service-jails-template">
	<title>A sablon létrehozása</title>

	<para>Ez a rész leírja a fõ sablon
	  létrehozásához szükséges
	  lépéseket.  Ez a jailek számára
	  írásvédett lesz.</para>

	<para>Érdemes mindig frissíteni a &os;
	  rendszerünket a legújabb -RELEASE ágra.
	  Ehhez olvassuk el az ide tartozó <link xlink:href="&url.books.handbook;/makeworld.html">fejezetet</link> a
	  kézikönyvbõl.  Abban az esetben, ha a
	  frissítés nem lenne megoldható, egy
	  <command>make buildworld</command> parancsot
	  mindenképpen le kell tudnunk futtatni.  Ezenfelül
	  a <package>sysutils/cpdup</package> csomagra
	  is szükségünk van.  Használni fogjuk a
	  &man.portsnap.8; segédprogramot is a &os;
	  Portgyûjtemény letöltéséhez.
	  Akik nem ismernék, a kézikönyv <link xlink:href="&url.books.handbook;/portsnap.html">errõl
	  szóló fejezetében</link> olvashatnak
	  róla.</para>

	<procedure>
	  <step>
	    <para>Elõször is, készítsük el
	      az írásvédett
	      állományrendszer
	      könyvtárszerkezetét, amely majd
	      tartalmazni fogja a jailek által használt
	      &os;-s programokat.  Ezután lépjünk be
	      a &os; forrásfájának
	      könyvtárába és
	      telepítsük fel az
	      írásvédett
	      állományrendszert a sablonba:</para>

	    <screen>&prompt.root; <userinput>mkdir /home/j /home/j/mroot</userinput>
&prompt.root; <userinput>cd /usr/src</userinput>
&prompt.root; <userinput>make installworld DESTDIR=/home/j/mroot</userinput></screen>
	  </step>

	  <step>
	    <para>Ezt követõen készítsük
	      elõ a jailek számára a &os;
	      Portgyûjteményt és &os;
	      forrásfát, melyek kellenek a
	      <application>mergemaster</application>
	      használatához:</para>

	    <screen>&prompt.root; <userinput>cd /home/j/mroot</userinput>
&prompt.root; <userinput>mkdir usr/ports</userinput>
&prompt.root; <userinput>portsnap -p /home/j/mroot/usr/ports fetch extract</userinput>
&prompt.root; <userinput>cpdup /usr/src /home/j/mroot/usr/src</userinput></screen>
	  </step>

	  <step>
	    <para>Hozzuk létre a rendszer
	      írásvédett részének
	      vázát:</para>

	    <screen>&prompt.root; <userinput>mkdir /home/j/skel /home/j/skel/home /home/j/skel/usr-X11R6 /home/j/skel/distfiles</userinput>
&prompt.root; <userinput>mv etc /home/j/skel</userinput>
&prompt.root; <userinput>mv usr/local /home/j/skel/usr-local</userinput>
&prompt.root; <userinput>mv tmp /home/j/skel</userinput>
&prompt.root; <userinput>mv var /home/j/skel</userinput>
&prompt.root; <userinput>mv root /home/j/skel</userinput></screen>
	  </step>

	  <step>
	    <para>Használjuk a
	      <application>mergemaster</application>t a
	      hiányzó konfigurációs
	      állományok
	      telepítésére.  Szabaduljunk meg a
	      <application>mergemaster</application> által
	      készített felesleges
	      könyvtáraktól:</para>

	    <screen>&prompt.root; <userinput>mergemaster -t /home/j/skel/var/tmp/temproot -D /home/j/skel -i</userinput>
&prompt.root; <userinput>cd /home/j/skel</userinput>
&prompt.root; <userinput>rm -R bin boot lib libexec mnt proc rescue sbin sys usr dev</userinput></screen>
	  </step>

	  <step>
	    <para>Most pedig szimbolikusan linkeljük az
	      írható-olvasható
	      állományrendszert az
	      írásvédett
	      állományrendszerre.  Ellenõrizzük,
	      hogy a szimbolikus linkek a megfelelõ <filename>s/</filename> könyvtárakban
	      jöttek létre.  Valós vagy rossz helyen
	      létrehozott könyvtárak
	      használata esetén a telepítés
	      nem fog sikerülni.</para>

	    <screen>&prompt.root; <userinput>cd /home/j/mroot</userinput>
&prompt.root; <userinput>mkdir s</userinput>
&prompt.root; <userinput>ln -s s/etc etc</userinput>
&prompt.root; <userinput>ln -s s/home home</userinput>
&prompt.root; <userinput>ln -s s/root root</userinput>
&prompt.root; <userinput>ln -s ../s/usr-local usr/local</userinput>
&prompt.root; <userinput>ln -s ../s/usr-X11R6 usr/X11R6</userinput>
&prompt.root; <userinput>ln -s ../../s/distfiles usr/ports/distfiles</userinput>
&prompt.root; <userinput>ln -s s/tmp tmp</userinput>
&prompt.root; <userinput>ln -s s/var var</userinput></screen>
	  </step>

	  <step>
	    <para>Utolsó lépésként hozzunk
	      létre egy
	      <filename>/home/j/skel/etc/make.conf</filename>
	      állományt az alábbi
	      tartalommal:</para>

	    <programlisting>WRKDIRPREFIX?=  /s/portbuild</programlisting>

	    <para>A <literal>WRKDIRPREFIX</literal>
	      beállításával
	      lehetõvé válik a &os; portok jaileken
	      belüli fordítása.  Ne felejtsük
	      el, hogy a portokat tartalmazó könyvtár
	      az írásvédett rendszer része!
	      Az átállított
	      <literal>WRKDIRPREFIX</literal> azonban megengedi, hogy a
	      fordítások az egyes jailek
	      írható-olvasható részeiben
	      történjenek.</para>
	  </step>
	</procedure>

      </sect3>

      <sect3 xml:id="jails-service-jails-creating">
	<title>A jailek létrehozása</title>

	<para>Most, miután teljesen elkészült a &os;
	  jailek sablonja, be is tudjuk állítani és
	  hozzá is tudjuk venni ezeket az
	  <filename>/etc/rc.conf</filename> állományhoz.
	  Ebben a példában 3 jail
	  létrehozását láthatjuk:
	  <quote>NS</quote>, <quote>MAIL</quote> és
	  <quote>WWW</quote>.</para>

	<procedure>
	  <step>
	    <para>Írjuk bele a következõ sorokat az
	      <filename>/etc/fstab</filename> állományba,
	      aminek köszönhetõen az egyes jailek
	      számára elérhetõvé
	      válik az írásvédett sablon
	      és a hozzájuk tartozó
	      írható-olvasható
	      területek:</para>

	    <programlisting>/home/j/mroot   /home/j/ns     nullfs  ro  0   0
/home/j/mroot   /home/j/mail   nullfs  ro  0   0
/home/j/mroot   /home/j/www    nullfs  ro  0   0
/home/js/ns     /home/j/ns/s   nullfs  rw  0   0
/home/js/mail   /home/j/mail/s nullfs  rw  0   0
/home/js/www    /home/j/www/s  nullfs  rw  0   0</programlisting>

	    <note>
	      <para>Az elsõ helyen nullával jelölt
		partíciókat a &man.fsck.8; nem fogja
		ellenõrizni a rendszer indulása
		során, a második helyen nullával
		jelölt partíciókat pedig nem fogja
		menteni a &man.dump.8;.  Mi egyáltalán nem
		akarjuk, hogy az <application>fsck</application>
		ellenõrizze vagy a <application>dump</application>
		lementse a jailjeinkhez tartozó
		írásvédett
		<application>nullfs</application>-partícióinkat.
		Ezért szerepel végig
		<quote>0&nbsp;0</quote> a fentebb szereplõ
		<filename>fstab</filename>-bejegyzések
		utolsó két oszlopában.</para>
	    </note>
	  </step>

	  <step>
	    <para>Állítsuk be a jaileket az
	      <filename>/etc/rc.conf</filename>-ban:</para>

	    <programlisting>jail_enable="YES"
jail_set_hostname_allow="NO"
jail_list="ns mail www"
jail_ns_hostname="ns.example.org"
jail_ns_ip="192.168.3.17"
jail_ns_rootdir="/usr/home/j/ns"
jail_ns_devfs_enable="YES"
jail_mail_hostname="mail.example.org"
jail_mail_ip="192.168.3.18"
jail_mail_rootdir="/usr/home/j/mail"
jail_mail_devfs_enable="YES"
jail_www_hostname="www.example.org"
jail_www_ip="62.123.43.14"
jail_www_rootdir="/usr/home/j/www"
jail_www_devfs_enable="YES"</programlisting>

	    <warning>
	      <para>Azért állítottuk a
	      <varname>jail_<replaceable>név</replaceable>_rootdir</varname>
		változó értékét a
		<filename>/usr/home</filename>
		könyvtárra a <filename>/home</filename> könyvtár
		helyett, mert a &os;
		alaptelepítésében a <filename>/home</filename> könyvtár
		fizikailag a <filename>/usr/home</filename>
		könyvtárral egyezik meg.  A
		<varname>jail_<replaceable>név</replaceable>_rootdir</varname>
		változó értékeként
		megadott könyvtár <emphasis>nem</emphasis>
		tartalmazhat szimbolikus linket,
		máskülönben a jailek nem lesznek
		hajlandóak létrejönni.  Ennek
		megállapításában a
		&man.realpath.1; segédprogram lehet
		segítségünkre.  A
		korlátozás részleteirõl a
		&os;-SA-07:01.jail biztonsági
		figyelmeztetésben olvashatunk.</para>
	    </warning>

	  </step>
	  <step>
	    <para>Hozzuk létre az egyes jailek
	      írásvédett
	      állományrendszereihez szükséges
	      csatlakozási pontokat:</para>

	    <screen>&prompt.root; <userinput>mkdir /home/j/ns /home/j/mail /home/j/www</userinput></screen>
	  </step>

	  <step>
	    <para>Telepítsük az
	      írható-olvasható sablont az egyes
	      jailekbe.  Figyeljük meg a <package>sysutils/cpdup</package>
	      használatát, amellyel az egyes
	      könyvtárak pontos másolatait hozhatjuk
	      létre:</para>

	    <screen>&prompt.root; <userinput>mkdir /home/js</userinput>
&prompt.root; <userinput>cpdup /home/j/skel /home/js/ns</userinput>
&prompt.root; <userinput>cpdup /home/j/skel /home/js/mail</userinput>
&prompt.root; <userinput>cpdup /home/j/skel /home/js/www</userinput></screen>
	  </step>

	  <step>
	    <para>Ebben a fázisban a jailek már
	      elkészültek és készen
	      állnak a futásra.  Elõször
	      csatlakoztassuk az egyes jailekhez szükséges
	      állományrendszereket, majd indítsuk
	      el ezeket a <filename>/etc/rc.d/jail</filename>
	      szkripttel:</para>

	    <screen>&prompt.root; <userinput>mount -a</userinput>
&prompt.root; <userinput>/etc/rc.d/jail start</userinput></screen>
	  </step>
	</procedure>

	<para>A jailek most már futnak.  Az elindulásuk
	  ellenõrzéséhez használjuk a
	  &man.jls.8; parancsot.  Valami ilyesmit láthatunk a
	  kiadása után:</para>

	<screen>&prompt.root; <userinput>jls</userinput>
   JID  IP Address      Hostname                      Path
     3  192.168.3.17    ns.example.org                /home/j/ns
     2  192.168.3.18    mail.example.org              /home/j/mail
     1  62.123.43.14    www.example.org               /home/j/www</screen>

	<para>Itt már be tudunk jelentkezni az egyes jailekbe,
	  új felhasználókat tudunk
	  készíteni vagy démonokat tudunk
	  beállítani.  A <literal>JID</literal> oszlop
	  mutatja az egyes jailek azonosítási
	  számát.  A 3-as <literal>JID</literal>
	  számú jailben az alábbi parancs
	  használatával karbantartási feladatokat
	  elvégezni:</para>

	<screen>&prompt.root; <userinput>jexec 3 tcsh</userinput></screen>
      </sect3>

      <sect3 xml:id="jails-service-jails-upgrading">
	<title>Frissítés</title>

	<para>Idõrõl idõre adódhat, hogy
	  frissítenünk kell a rendszert a &os; egy
	  újabb változatára, vagy egy
	  biztonsági hiba javítása miatt, vagy
	  pedig a már meglevõ jailek számára
	  hasznos újítások bevezetése miatt.
	  Ez a kialakítás megkönnyíti a
	  korábban létrehozott jailjeink
	  frissítését.  Továbbá
	  igyekszik minimalizálni a kiesésüket is,
	  mivel a jaileket csak a legutolsó pillanatban fogjuk
	  leállítani.  Sõt, még az is
	  lehetõvé válik, hogy
	  visszaállítsuk a korábbi verziót,
	  ha véletlenül valami rosszul sülne el
	  menetközben.</para>

	<procedure>
	  <step>
	    <para>Elsõ lépéseként
	      frissítsük magát a befogadó
	      rendszert a megszokott módon.  Ezután
	      hozzunk létre egy új
	      írásvédett sablont a <filename>/home/j/mroot2</filename>
	      könyvtárban.</para>

	    <screen>&prompt.root; <userinput>mkdir /home/j/mroot2</userinput>
&prompt.root; <userinput>cd /usr/src</userinput>
&prompt.root; <userinput>make installworld DESTDIR=/home/j/mroot2</userinput>
&prompt.root; <userinput>cd /home/j/mroot2</userinput>
&prompt.root; <userinput>cpdup /usr/src usr/src</userinput>
&prompt.root; <userinput>mkdir s</userinput></screen>

	    <para>A <buildtarget>installworld</buildtarget>
	      lefuttatása létrehoz néhány
	      felesleges könyvtárat, melyeket
	      takarítsunk is el:</para>

	    <screen>&prompt.root; <userinput>chflags -R 0 var</userinput>
&prompt.root; <userinput>rm -R etc var root usr/local tmp</userinput></screen>
	  </step>

	  <step>
	    <para>Hozzuk újra létre az
	      írható-olvasható szimbolikus
	      linkjeinket a fõ
	      állományrendszerre:</para>

	    <screen>&prompt.root; <userinput>ln -s s/etc etc</userinput>
&prompt.root; <userinput>ln -s s/root root</userinput>
&prompt.root; <userinput>ln -s s/home home</userinput>
&prompt.root; <userinput>ln -s ../s/usr-local usr/local</userinput>
&prompt.root; <userinput>ln -s ../s/usr-X11R6 usr/X11R6</userinput>
&prompt.root; <userinput>ln -s s/tmp tmp</userinput>
&prompt.root; <userinput>ln -s s/var var</userinput></screen>
	  </step>

	  <step>
	    <para>Most érkezett el az idõ, hogy
	      leállítsuk a jaileket:</para>

	    <screen>&prompt.root; <userinput>/etc/rc.d/jail stop</userinput></screen>
	  </step>

	  <step>
	    <para>Válasszuk le az eredeti
	      állományrendszereket:</para>

	    <screen>&prompt.root; <userinput>umount /home/j/ns/s</userinput>
&prompt.root; <userinput>umount /home/j/ns</userinput>
&prompt.root; <userinput>umount /home/j/mail/s</userinput>
&prompt.root; <userinput>umount /home/j/mail</userinput>
&prompt.root; <userinput>umount /home/j/www/s</userinput>
&prompt.root; <userinput>umount /home/j/www</userinput></screen>

	    <note>
	      <para>Az írható-olvasható
		állományrendszerek hozzá vannak
		kapcsolva az írásvédett
		állományrendszerhez (<filename>/s</filename>), ezért azokat
		elõször le kell választani.</para>
	    </note>
	  </step>

	  <step>
	    <para>Mozgassuk el az útból a régi
	      írásvédett
	      állományrendszerünket és
	      váltsuk fel az újjal.  Így
	      biztonsági mentésként és a
	      régi írásvédett rendszer
	      archívumaként továbbra is
	      rendelkezésre áll, ha valami baj
	      történne.  Az itt használt
	      elnevezés az újonnan létrehozott
	      írásvédett
	      állományrendszer
	      dátumából ered.  Mozgassuk át
	      az eredeti &os; Portgyûjteményt az új
	      állományrendszerre, hogy
	      megtakarítsunk némi tárhelyet
	      és
	      állományleírót:</para>

	    <screen>&prompt.root; <userinput>cd /home/j</userinput>
&prompt.root; <userinput>mv mroot mroot.20060601</userinput>
&prompt.root; <userinput>mv mroot2 mroot</userinput>
&prompt.root; <userinput>mv mroot.20060601/usr/ports mroot/usr</userinput></screen>
	  </step>
	  <step>
	    <para>Most már készen áll az új
	      írásvédett sablon, így
	      már csak az állományrendszerek
	      újracsatlakoztatása és a jailek
	      újraindítása maradt:</para>

	    <screen>&prompt.root; <userinput>mount -a</userinput>
&prompt.root; <userinput>/etc/rc.d/jail start</userinput></screen>
	  </step>
	</procedure>

	<para>A &man.jls.8; használatával
	  ellenõrizzük, hogy a jailek rendesen elindultak.  Ne
	  felejtsük el jailenként lefuttatni a mergemastert
	  sem.  A konfigurációs állományokat
	  és az rc.d szkripteket is frissítenünk kell
	  majd.</para>

      </sect3>
    </sect2>
  </sect1>
</chapter>
