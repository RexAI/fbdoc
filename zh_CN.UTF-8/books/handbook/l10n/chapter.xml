<?xml version="1.0" encoding="utf-8"?>
<!--
    The FreeBSD Documentation Project
    The FreeBSD Simplified Chinese Project

    Original Revision: r43258
     $FreeBSD$
-->
<chapter xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.0" xml:id="l10n">
    <info><title>本地化－<acronym>i18n</acronym>/<acronym>L10n</acronym> 使用和设置</title>
    <authorgroup>
      <author><personname><firstname>Andrey</firstname><surname>Chernov</surname></personname><contrib>Contributed by </contrib></author>
    </authorgroup>
    <authorgroup>
      <author><personname><firstname>Michael C.</firstname><surname>Wu</surname></personname><contrib>Rewritten by </contrib></author>
      <!-- 30 Nv 2000 -->
    </authorgroup>
  </info>

  

  <sect1 xml:id="l10n-synopsis">
    <title>概述</title>

    <para>&os; 是一个由分布在全球的用户和贡献者所支持的项目。
        本章将讨论 &os; 的国际化和本地化， 以便让母语非英语系的用户也能顺利的完成各项工作。
        在系统和应用两个层面上， 主要是通过执行 <acronym>i18n</acronym> 标准来实现的，
        这里我们将会大致介绍下如何实施。</para>

    <para>读完这章，您将了解：</para>

    <itemizedlist>
      <listitem>
	<para>各种不同的语言和地域如何在操作系统上进行编码。</para>
      </listitem>

      <listitem>
	<para>如何为 shell 设置本地语系环境。</para>
      </listitem>

      <listitem>
	<para>如何为非英语语系配置控制台（console）。</para>
      </listitem>

      <listitem>
	<para>如何使用不同的语言来有效地使用 <application>Xorg</application> 。</para>
      </listitem>

      <listitem>
          <para>到哪里可以找到更多有关开发兼容 <acronym>i18n</acronym> 标准的应用程序的信息。</para>
      </listitem>
    </itemizedlist>

    <para>阅读本章前， 您应当了解：</para>

    <itemizedlist>
      <listitem><para>如何 <link linkend="ports"> 安装额外的第三方应用程序</link> 。</para></listitem>
    </itemizedlist>
  </sect1>

  <sect1 xml:id="l10n-basics">
    <title>基础知识</title>

    <sect2>
      <title>什么是 <acronym>i18n</acronym>/<acronym>L10n</acronym> ？</title>

      <indexterm>
	<primary>internationalization</primary>
	<see>localization</see>
      </indexterm>
      <indexterm><primary>localization</primary></indexterm>

      <para>开发人员将 internationalization 简写成 <acronym>i18n</acronym> ， 中间的数字是前后两个字母间的字母个数。
          <acronym>L10n</acronym> 是依据 <quote>localization</quote> 采用相似规则命名的，
          只要应用程序符合 <acronym>i18n</acronym>/<acronym>L10n</acronym> 规则、协定的，
          就可以让用户选择他们自己所需的语言了。</para>

      <para><acronym>i18n</acronym> 应用程序使用 <acronym>i18n</acronym> 工具开发的，它允许开发者编写一个简单的文件，
          就可以将显示的菜单和文本翻译成本地语言。</para>
    </sect2>

    <sect2>
      <title>为什么要使用 <acronym>i18n</acronym>/<acronym>L10n</acronym> ？</title>

      <para>因为只要符合 <acronym>i18n</acronym>/<acronym>L10n</acronym> 标准， 就可以轻松的查看、输入或处理非英文信息。</para>
    </sect2>

    <sect2>
      <title>支持何种语言？</title>

      <para><acronym>i18n</acronym> 和 <acronym>L10n</acronym> 不是 &os; 特有的。 它支持全球主流语言， 包括但不限于：
          中文、 德文、 日文、 朝鲜文、 法文、 俄文和越南文。</para>
    </sect2>
  </sect1>

  <sect1 xml:id="using-localization">
    <title>使用本地化语言</title>

    <indexterm><primary>locale</primary></indexterm>

    <para>区域设置由三个部分构成：语言代码 (Language Code)、 国家代码 (Country Code) 和编码 (Encoding) 。
        所以， 本地化语言名称由这三部分组成：</para>

    <programlisting><replaceable>语言代码</replaceable>_<replaceable>国家代码</replaceable>.<replaceable>编码</replaceable></programlisting>

    <sect2>
      <title>语言和国家代码</title>

      <indexterm><primary>language codes</primary></indexterm>
      <indexterm><primary>country codes</primary></indexterm>

      <para>为了指定 &os; 系统使用某个特定语言， 用户需要确定特定的国家代码和语言代码（ 国家代码能让应用程序知道使用哪种语言）。
          以下是语言/国家代码的例子：</para>

      <informaltable frame="none" pgwide="1">
	<tgroup cols="2">
	  <thead>
	    <row>
            <entry>语言/国家代码</entry>
	      <entry>简介</entry>
	    </row>
	  </thead>

	  <tbody>
	    <row>
	      <entry>en_US</entry>
	      <entry>英语（美国）</entry>
	    </row>

	    <row>
	      <entry>ru_RU</entry>
	      <entry>俄语（俄国）</entry>
	    </row>

	    <row>
	      <entry>zh_CN</entry>
	      <entry>简体中文（中国大陆）</entry>
	    </row>
	  </tbody>
	</tgroup>
      </informaltable>

      <para>完整的可用区域设置代码列表， 可用输入以下命令获得：</para>

      <screen>&prompt.user; <userinput>locale -a</userinput></screen>
    </sect2>

    <sect2>
      <title>编码</title>

      <indexterm><primary>encodings</primary></indexterm>
      <indexterm><primary>ASCII</primary></indexterm>

      <para>有些语言不使用 ASCII 编码， 它们使用 8 位， 宽或多字节字符编码，
          有关这些编码的更多信息， 请参阅 &man.multibyte.3; 。 比较古老的应用程序可能会无法识别它们，
          并会认为它们是控制字符。 较新的应用程序通常能识别 8 位字符。 由于个程序实现方式不同，
          用户可能不得不重新编译程序添加宽或多字节编码支持， 或进行额外配置。
          为了输入和处理宽或多字节字符， <link xlink:href="&url.base;/ports/index.html">&os; Ports
              Collection</link> 已经有各种语言的程序提供。 详情参阅 &os; port 中的 <acronym>i18n</acronym> 相关文档。</para>

      <para>具体的来说， 用户可能需要查看应用程序的文档来决定如何正确地配置或确定使用哪些编译选项来编译 port 。</para>

      <para>有些事情需要注意的：</para>

      <itemizedlist>
	<listitem>
	  <para>特定语言的简单C字符集（参见 &man.multibyte.3;）， 例如 ISO8859-1、 ISO8859-15、 KOI8-R， CP437。</para>
	</listitem>

	<listitem>
	  <para>宽字节或多字节编码，如EUC, Big5。</para>
	</listitem>
      </itemizedlist>

      <para>现行的字符集列表， 可用在 <link xlink:href="http://www.iana.org/assignments/character-sets">IANA
        Registry</link>上获得。</para>

      <note>
	<para>与此不同的是， &os; 使用与 X11-兼容的本地编码模式。</para>
      </note>

      <para>在 &os; Ports Collection 中， <acronym>i18n</acronym> 应用程序已经使用 <literal>i18n</literal> 来命名。
          然而它们不是总支持需要的语言。</para>
    </sect2>

    <sect2 xml:id="setting-locale">
      <title>本地化设置</title>

      <para>通常本地化只需要在 shell 里设置 <envar>LANG</envar> 变量，
          一般通过用户的  <filename>~/.login_conf</filename> 或用户 shell 启动配置文件：
          (<filename>~/.profile</filename> 、 <filename>~/.bashrc</filename> 和 <filename>~/.cshrc</filename>)
          没必要设置本地化相关子集， 例如 <envar>LC_CTYPE</envar> 或 <envar>LC_CTIME</envar> 。
          更多的信息请参考特定语言的 &os; 文档。</para>

      <para>您应当在您的配置文件中设置下面两个变量:</para>

      <itemizedlist>
	<listitem>
	  <para><envar>LANG</envar> for &posix;<indexterm>
	      <primary>POSIX</primary>
	    </indexterm>
	    &man.setlocale.3; family functions</para>
	</listitem>

	<listitem>
	  <indexterm><primary>MIME</primary></indexterm>

      <para><envar>MM_CHARSET</envar> 应用程序的MIME字符集。</para>
	</listitem>
      </itemizedlist>

      <para>这包括用户的 shell 配置， 特定的应用配置和 <application>Xorg</application> 配置。</para>

      <sect3>
	<title>设置本地化的方法</title>

	<indexterm><primary>locale</primary></indexterm>
	<indexterm><primary>login class</primary></indexterm>

	<para>本节介绍两种方法设置本地化。 一种是（首选）就是 <link linkend="login-class">登录类（login class）</link> 里指定环境变量。
        另一种方法是把环境变量加到 <link linkend="startup-file">启动文件</link> 中去。</para>

	<sect4 xml:id="login-class">
	  <title>配置登录类</title>

      <para>这种方法允许把本地化名称和 MIME 字符集的环境变量赋给可能的 shell ，而不是加到每个特定 shell 的启动文件里。
          <link linkend="usr-setup">用户级设置</link> 允许普通用户自己完成这个设置，
          而 <link linkend="adm-setup">管理员级</link> 则需要超级用户权限才能完成设置。</para>

	  <sect5 xml:id="usr-setup">
	    <title>用户级设置</title>

	    <para>这里有个在用户家目录下的 <filename>.login_conf</filename> 文件的小例子， 它包含两个 Latin-1 编码：</para>

	    <programlisting>me:\
	:charset=ISO-8859-1:\
	:lang=de_DE.ISO8859-1:</programlisting>

	    <indexterm><primary>Traditional Chinese</primary>
	      <secondary>BIG-5 encoding</secondary></indexterm>
	    <para>这是一个为 <filename>.login_conf</filename> 设置繁体中文的BIG-5编码的例子。
            应该设置下面的大部分变量， 因为很多软件都没有为中文， 日文和韩文设置正确的本地化变量。</para>

	    <programlisting>#Users who do not wish to use monetary units or time formats
#of Taiwan can manually change each variable
me:\
	:lang=zh_TW.Big5:\
	:setenv=LC_ALL=zh_TW.Big5:\
	:setenv=LC_COLLATE=zh_TW.Big5:\
	:setenv=LC_CTYPE=zh_TW.Big5:\
	:setenv=LC_MESSAGES=zh_TW.Big5:\
	:setenv=LC_MONETARY=zh_TW.Big5:\
	:setenv=LC_NUMERIC=zh_TW.Big5:\
	:setenv=LC_TIME=zh_TW.Big5:\
	:charset=big5:\
	:xmodifiers="@im=gcin": #Set gcin as the XIM Input Server</programlisting>

	    <para>更多的信息参考 <link linkend="adm-setup">管理员级设置</link> 和 &man.login.conf.5; 。</para>
	  </sect5>

	  <sect5 xml:id="adm-setup">
	    <title>管理员级设置</title>

	    <para>检查用户的登录类在 <filename>/etc/login.conf</filename> 里面是否设置了正确的语言。
            主要要确定下面的几个设置：</para>

	    <programlisting><replaceable>language_name</replaceable>|<replaceable>Account Type Description</replaceable>:\
	:charset=<replaceable>MIME_charset</replaceable>:\
	:lang=<replaceable>locale_name</replaceable>:\
	:tc=default:</programlisting>

	    <para>再次使用前面的 Latin-1 编码的例子：</para>

	    <programlisting>german|German Users Accounts:\
	:charset=ISO-8859-1:\
	:lang=de_DE.ISO8859-1:\
	:tc=default:</programlisting>

	    <para>每次修改完登录类都需要执行以下命令更新数据库：</para>

	    <screen>&prompt.root; <userinput>cap_mkdb /etc/login.conf</userinput></screen>

	    <bridgehead renderas="sect4">使用 &man.vipw.8; 改变登录类</bridgehead>

	    <indexterm>
	      <primary><command>vipw</command></primary>
	    </indexterm>
        <para>使用 <command>vipw</command> 添加新用户，修改 <replaceable>language</replaceable> 值：</para>

	    <programlisting>user:password:1111:11:<replaceable>language</replaceable>:0:0:User Name:/home/user:/bin/sh</programlisting>

	    <bridgehead renderas="sect4">使用 &man.adduser.8; 修改登录类</bridgehead>

	    <indexterm>
	      <primary><command>adduser</command></primary>
	    </indexterm>
	    <indexterm><primary>login class</primary></indexterm>
	    <para>使用 <command>adduser</command> 添加新用户， 配置语言：</para>

	    <itemizedlist>
	      <listitem>
              <para>在 <filename>/etc/adduser.conf</filename> 里配置 <literal>defaultclass = language</literal> 。</para>
	      </listitem>

	      <listitem>
		<para>另外， 使用是会给出如何信息， 用于变更语言：

		  <screen><prompt>Enter login class: default []:</prompt></screen>

		  如果使用 &man.adduser.8; 创建新用户：</para>
	      </listitem>

	      <listitem>
		<para>也可用使用以下命令绕过 <filename>/etc/adduser.conf</filename> 设定的语言， 直接指定需要的语言：</para>

		<screen>&prompt.root; <userinput>adduser -class language</userinput></screen>
	      </listitem>
	    </itemizedlist>

	    <bridgehead renderas="sect4">使用 &man.pw.8; 改变登录类</bridgehead>
	    <indexterm>
	      <primary><command>pw</command></primary>
	    </indexterm>
        <para>如果您使用 &man.pw.8; 来添加新用户，可用这样：</para>

	    <screen>&prompt.root; <userinput>pw useradd user_name -L language</userinput></screen>
	  </sect5>
	</sect4>

	<sect4 xml:id="startup-file">
	  <title>配置 Shell 启动配置文件的方法</title>

	  <note>
          <para>不推荐使用这种设置方法， 因为它需要为每一个可能的 shell 配置。
              推荐使用配置 <link linkend="login-class">登录类</link> 的方法代替。</para>
	  </note>

	  <indexterm><primary>MIME</primary></indexterm>
	  <indexterm><primary>locale</primary></indexterm>
      <para>为了设置本地化名称和 MIME 字符集，
          需要在 <filename>/etc/profile</filename> 或 <filename>/etc/csh.login</filename> 启动文件里面设置以下两个变量。
          下面我们使用德语做例子：</para>

	  <para>在 <filename>/etc/profile</filename> 里设置：</para>

	  <programlisting><envar>LANG=de_DE.ISO8859-1; export LANG</envar>
<envar>MM_CHARSET=ISO-8859-1; export MM_CHARSET</envar></programlisting>

	  <para>或在 <filename>/etc/csh.login</filename> 里设置：</para>

	  <programlisting><envar>setenv LANG de_DE.ISO8859-1</envar>
<envar>setenv MM_CHARSET ISO-8859-1</envar></programlisting>

	  <para>另外， 您也可用把以上设置代码添加到 <filename>/usr/share/skel/dot.profile</filename> 或
	    <filename>/usr/share/skel/dot.login</filename> 文件中。</para>

    <para>对于 <application>Xorg</application> 的配置， 需要在 <filename>~/.xinitrc</filename> 添加以下一行内容（具体使用哪种， 根据您使用的 shell 确定）：</para>

	  <programlisting><envar>LANG=de_DE.ISO8859-1; export LANG</envar></programlisting>

	  <programlisting><envar>setenv LANG de_DE.ISO8859-1</envar></programlisting>
	</sect4>
      </sect3>
    </sect2>

    <sect2 xml:id="setting-console">
      <title>控制台设置</title>

      <para>对于所有的简单 C 字符集，在  <filename>/etc/rc.conf</filename> 中用正在讨论的语言设置正确的控制台字符：</para>

      <programlisting>font8x16=<replaceable>font_name</replaceable>
font8x14=<replaceable>font_name</replaceable>
font8x8=<replaceable>font_name</replaceable></programlisting>

      <para>这里的 <replaceable>font_name</replaceable> 取自 <filename>/usr/share/syscons/fonts</filename> 目录中不带 <filename>.fnt</filename> 扩展名的文件名。</para>

      <indexterm>
	<primary><application>sysinstall</application></primary>
      </indexterm>
      <indexterm><primary>keymap</primary></indexterm>
      <indexterm><primary>screenmap</primary></indexterm>
      <para>键盘映射（keymap）和屏幕布局（screenmap）的简单 C 字符集可以通过 <command>sysinstall</command> 进行配置。
          启动 <application>sysinstall</application> ，选择 <guimenuitem>Configure</guimenuitem> ，
          之后选择, <guimenuitem>Console</guimenuitem> 进行配置就可用了。除此之外， 您也可用直接在 <filename>/etc/rc.conf</filename> 中添加以下内容：</para>

      <programlisting>scrnmap=<replaceable>screenmap_name</replaceable>
keymap=<replaceable>keymap_name</replaceable>
keychange="<replaceable>fkey_number sequence</replaceable>"</programlisting>

      <para>这里的 <replaceable>screenmap_name</replaceable> 取自 <filename>/usr/share/syscons/scrnmaps</filename> 目录中不带 <filename>.scm</filename> 扩展名的文件名。
          一个带映射字体的屏幕布局通常被称为一个工作区， 用来在 VGA 适配器字体矩阵上扩展 8 位到 9 位。
          如果屏幕字体是使用一个 8 位的排列， 要移动这些字母离开这些区域。</para>

      <para>如果您在 <filename>/etc/rc.conf</filename> 中启用了 <application>moused</application> 服务，
          请留意鼠标指针信息。</para>

      <indexterm>
	<primary><application>moused</application></primary>
      </indexterm>
      <para>默认情况下， &man.syscons.4; 驱动程序的鼠标指针在字符集中占用 0xd0-0xd3 的范围。
           如果您的语言使用这个范围， 您必须把指针范围移出这个范围。要为 &os; 启用这个功能，
           需要在,  <filename>/etc/rc.conf</filename> 中添加以下内容：</para>

      <programlisting>mousechar_start=3</programlisting>

      <para>这里的 <replaceable>keymap_name</replaceable> 取自 <filename>/usr/share/syscons/keymaps</filename> 目录中不带 <filename>.kbd</filename> 扩展名的文件名。
          如果不能确定应该使用哪一个键盘布局， 则可用使用 &man.kbdmap.1; 来测试， 而无需反复重启测试。</para>

      <para>通常， <literal>keychange</literal> 是设定功能键时， 匹配选定的终端类型来说是必需的，
          因为功能键序列无法在键盘布局中定义。</para>

      <para>此外您还应该检查并确认在 <filename>/etc/ttys</filename> 中已经为所有的虚拟终端配置了正确的终端类型。
          目前， 相关的默认定义有：</para>

      <informaltable frame="none" pgwide="1">
	<tgroup cols="2">
	  <thead>
	    <row>
	      <entry>字符集设置</entry>
	      <entry>终端类型</entry>
	    </row>
	  </thead>

	  <tbody>
	    <row>
	      <entry>ISO8859-1 or ISO8859-15</entry>
	      <entry><literal>cons25l1</literal></entry>
	    </row>

	    <row>
	      <entry>ISO8859-2</entry>
	      <entry><literal>cons25l2</literal></entry>
	    </row>

	    <row>
	      <entry>ISO8859-7</entry>
	      <entry><literal>cons25l7</literal></entry>
	    </row>

	    <row>
	      <entry>KOI8-R</entry>
	      <entry><literal>cons25r</literal></entry>
	    </row>

	    <row>
	      <entry>KOI8-U</entry>
	      <entry><literal>cons25u</literal></entry>
	    </row>

	    <row>
	      <entry>CP437 (VGA default)</entry>
	      <entry><literal>cons25</literal></entry>
	    </row>

	    <row>
	      <entry>US-ASCII</entry>
	      <entry><literal>cons25w</literal></entry>
	    </row>
	  </tbody>
	</tgroup>
      </informaltable>

      <para>对于宽或多字节字符的语言， 可以您的在 <filename>/usr/ports/language</filename> 目录中选择正确的 &os; port 。
          一些 port 以控制台形式出现， 而系统把它作为串行虚拟终端， 因此， 需要在 <filename>/etc/ttys</filename>
          中为 <application>Xorg</application> 和 伪串行控制台准备足够的虚拟终端。
          下面是在控制台中使用其他语言的应用程序的部分列表：</para>

      <informaltable frame="none" pgwide="1">
	<tgroup cols="2">
	  <thead>
	    <row>
	      <entry>语言</entry>
	      <entry>特定区域</entry>
	    </row>
	  </thead>

	  <tbody>
	    <row>
	      <entry>Traditional Chinese (BIG-5)</entry>
	      <entry><package>chinese/big5con</package></entry>
	    </row>

	    <row>
	      <entry>Japanese</entry>
	      <entry><package>japanese/kon2-16dot</package> or
		<package>japanese/mule-freewnn</package></entry>
	    </row>

	    <row>
	      <entry>Korean</entry>
	      <entry><package>korean/han</package></entry>
	    </row>
	  </tbody>
	</tgroup>
      </informaltable>
    </sect2>

    <sect2>
      <title>Xorg 设置</title>

      <para>虽然 &os; 默认不安装 <application>Xorg</application> ，但它可用通过 Ports Collection 安装。
          如何安装请参考 <xref linkend="x11"/> 。本节讨论它安装后的如何本地化 <application>Xorg</application> 。</para>

      <para>在 <filename>~/.Xresources</filename> 里面，您可以适当调整特定应用程序的 <acronym>i18n</acronym> 设置（如字体，菜单等）。</para>

      <sect3>
          <title>显示字体</title>

	<indexterm><primary>Xorg True Type font
	    server</primary></indexterm>
<para>安装 <package>x11-servers/xorg-server</package> 后， 安装对于语言的 &truetype; 字体。
    在设置了正确的区域信息后，您将能够在图形应用程序中选择需要的语言。</para>
      </sect3>

      <sect3>
	<title>输入非英语字符</title>

	<indexterm><primary>X Input Method
	    (XIM)</primary></indexterm>

	<para>X 输入法 (<acronym>XIM</acronym>) 协议是 <application>Xorg</application> 客户输入的标准，
        所有将作为 XIM 客户端来写的 X11 应用程序从 XIM 输入服务器输入。 不同的语言有几种XIM服务器可用。</para>
      </sect3>
    </sect2>

    <sect2>
      <title>打印机设置</title>

      <para>一些简单的 C 字符集通常是用硬编码来编码进打印机的。
          宽或多字符的字符集需要特定的设置， 我们推荐使用 <application>apsfilter</application> 设置。
          您也可以使用特定语言转换器把文档转换为 &postscript; 或 PDF 格式。</para>
    </sect2>

    <sect2>
      <title>内核和文件系统</title>

      <para>&os; 的快速文件系统 (<acronym>FFS</acronym>) 是完全支持 8 位字符的， 因此它可以被用于任何简单的 C 字符集，
          但在文件系统中不会保存字符集的名字； 也就是说， 它不加修改地保存 8位信息，
          而并不知道如何编码。 正式说来， <acronym>FFS</acronym> 目前还不支持任何形式的宽或多字节字符集。
          不过， 某些宽或多字符集提供了独立的针对 <acronym>FFS</acronym> 的补丁来帮助启用关于它们的支持。
          目前这些要么是无法移植的， 要么过于粗糙， 因此我们不打算把它们加入到源代码中。
          请参考相关语言的 Web 站点， 以了解关于这些补丁的进一步情况。</para>

      <indexterm><primary>DOS</primary></indexterm>
      <indexterm><primary>Unicode</primary></indexterm>
      <para>&os; &ms-dos; 已经能够配置成用在 &ms-dos;上，Unicode字符集和可选的 &os; 文件系统字符集的更多信息，
          请参考 &man.mount.msdosfs.8; 联机手册。</para>
    </sect2>
  </sect1>

  <sect1 xml:id="l10n-compiling">
    <title>编译 <acronym>i18n</acronym> 程序</title>

    <para>&os; Ports Collection 中有很多 port 已经支持 <acronym>i18n</acronym> 了。
        他们中的一些都用 <literal>-i18n</literal> 作标记。 这些和其他很多程序已经内建 <acronym>i18n</acronym> 的支持，
        不需要考虑额外的事项了。</para>

    <indexterm>
      <primary><application>MySQL</application></primary>
    </indexterm>
    <para>然而一些像 <application>MySQL</application> 这样的应用程序需要重新配置字符集，
        可在 <filename>Makefile</filename> 里面设置，或者直接把参数传递给 <application>configure</application> 。</para>
  </sect1>

  <sect1 xml:id="lang-setup">
    <title>本地化 &os;</title>

    <sect2 xml:id="ru-localize">
      <info><title>俄语 (KOI8-R 编码)</title>
	<authorgroup>
	  <author><personname><firstname>Andrey</firstname><surname>Chernov</surname></personname><contrib>Originally contributed by </contrib></author>
	</authorgroup>
      </info>
      

      <indexterm>
	<primary>localization</primary>
	<secondary>Russian</secondary>
      </indexterm>

      <para>关 于KOI8-R 编码的更多信息请查阅 <link xlink:href="http://koi8.pp.ru/">KOI8-R References
	  (Russian Net Character Set)</link>.</para>

      <sect3>
	<title>本地设置</title>

	<para>要设置它， 将以下内容添加到您的 <filename>~/.login_conf</filename> 中：</para>

	<programlisting>me:My Account:\
	:charset=KOI8-R:\
	:lang=ru_RU.KOI8-R:</programlisting>
      </sect3>

      <sect3>
	<title>控制台设置</title>

	<itemizedlist>
	  <listitem>
	    <para>添加以下内容到 <filename>/etc/rc.conf</filename> 文件中：</para>

	    <programlisting>keymap="ru.koi8-r"
scrnmap="koi8-r2cp866"
font8x16="cp866b-8x16"
font8x14="cp866-8x14"
font8x8="cp866-8x8"
mousechar_start=3</programlisting>
	  </listitem>

	  <listitem>
          <para>在 <filename>/etc/ttys</filename> 里面修改 <literal>ttyv</literal> 记录，
              使用 <literal>cons25r</literal> 作为终端类型。</para>
	  </listitem>
	</itemizedlist>
      </sect3>

      <sect3>
	<title>打印机设置</title>

	<indexterm><primary>printers</primary></indexterm>
    <para>既然绝大多数带俄语字符的打印机遵循CP866的标准， 那么需要一个针对KOI8-R到CP866转换的特定输出过滤器。
        这样的一个过滤器默认的安装在 <filename>/usr/libexec/lpr/ru/koi2alt</filename> 。
        一个支持俄语的打印机的 <filename>/etc/printcap</filename> 记录看起来是这样的：</para>

	<programlisting>lp|Russian local line printer:\
	:sh:of=/usr/libexec/lpr/ru/koi2alt:\
	:lp=/dev/lpt0:sd=/var/spool/output/lpd:lf=/var/log/lpd-errs:</programlisting>

	<para>更多信息请参考 &man.printcap.5; 联机手册。</para>
      </sect3>

      <sect3>
	<title>&ms-dos; 文件系统和俄语文件名</title>

	<para>下面的例子是在挂载 &ms-dos; 文件系统后， 启用对俄语文件名支持的 &man.fstab.5; 记录：</para>

	<programlisting>/dev/ad0s2      /dos/c  msdos   rw,-Lru_RU.KOI8-R 0 0</programlisting>

	<para><option>-L</option> 选项指定地域名称， 更多信息请参考 &man.mount.msdosfs.8; 的联机手册。</para>
      </sect3>

      <sect3>
	<title><application>Xorg</application> 设置</title>

	<orderedlist>
	  <listitem>
	    <para>首先， 请进行前面介绍的 <link linkend="setting-locale">非-X 的本地化设置</link>。</para>
	  </listitem>

	  <listitem>
	    <para>如果您正使用  <application>&xorg;</application> ，请安装 <package>x11-fonts/xorg-fonts-cyrillic</package> 包。</para>

	    <para>检查您的 <filename>/etc/X11/xorg.conf</filename> 文件中的 <literal>"Files"</literal> 小节。
            在 <literal>FontPath</literal> 节添加 <emphasis>before</emphasis> 字体：</para>

	    <programlisting>FontPath   "/usr/local/lib/X11/fonts/cyrillic"</programlisting>

	    <note>
            <para>查看 Ports Collection 了解更多关于 Cyrillic 字体信息。</para>
	    </note>
	  </listitem>

	  <listitem>
          <para>激活俄语键盘布局， 需要在 <filename>/etc/xorg.conf</filename> 文件的 <literal>"Keyboard"</literal> 小节中加入下列内容：</para>

	    <programlisting>Option "XkbLayout"   "us,ru"
Option "XkbOptions"  "grp:toggle"</programlisting>

        <para>确保该文件中已注释掉了 <literal>XkbDisable</literal> 选项。</para>

        <para>使用 <literal>grp:toggle</literal> 时， 切换键将是 <keycap>右 Alt</keycap>，
            而使用 <literal>grp:ctrl_shift_toggle</literal> 则表示切换键是 <keycombo action="simul"><keycap>Ctrl</keycap><keycap>Shift</keycap></keycombo> 。
            使用 <literal>grp:caps_toggle</literal> 时， 切换键则是 <keycap>CapsLock</keycap> 。
            旧的 <keycap>CapsLock</keycap> 功能仍可通过 <keycombo action="simul"><keycap>Shift</keycap><keycap>CapsLock</keycap></keycombo> 。
            由于不明原因， <literal>grp:caps_toggle</literal> 在 <application>&xorg;</application> 中无法使用。</para>

      <para>如果您的键盘上有 <quote>&windows;</quote> 键， 以及某些非字母键映射不正常，
          则您应该在 <filename>/etc/xorg.conf</filename> 文件中添加以下内容：</para>

	    <programlisting>Option "XkbVariant" ",winkeys"</programlisting>

	    <note>
	      <para>俄语的 XKB 键盘可能并不为某些不具备本地化功能的应用程序所支持。</para>
	    </note>
	  </listitem>
	</orderedlist>

	<note>
        <para>本地化程序最低限度应在程序启动时调用 <function>XtSetLanguageProc (NULL, NULL, NULL);</function> 函数。</para>

	  <para>参考 <link xlink:href="http://koi8.pp.ru/xwin.html">
	      KOI8-R for X Window</link> 以获得更多关于对 <application>Xorg</application> 应用进行本地化的指导。</para>
	</note>
      </sect3>
    </sect2>

    <sect2>
      <title>设置繁体中文</title>

      <indexterm>
	<primary>localization</primary>
	<secondary>Traditional Chinese</secondary>
      </indexterm>
      <para>&os;-Taiwan 项目有一个使用很多中文 ports 的中文化指南在 <uri xlink:href="http://netlab.cse.yzu.edu.tw/~statue/freebsd/zh-tut/">http://netlab.cse.yzu.edu.tw/~statue/freebsd/zh-tut/</uri>
          目前， <literal>&os; 中文化指南</literal> 的维护人员是 沈俊兴 <email>statue@freebsd.sinica.edu.tw</email> 。</para>
    </sect2>

    <sect2>
      <title>德语本地化（适合所有的ISO 8859-1语言）</title>

      <indexterm>
	<primary>localization</primary>
	<secondary>German</secondary>
      </indexterm>

      <para>Slaven Rezic <email>eserte@cs.tu-berlin.de</email> 写了一个在 &os; 机器下如何使用日尔曼语言的德语指南。
          这份德语教程可以在 <uri xlink:href="http://user.cs.tu-berlin.de/~eserte/FreeBSD/doc/umlaute/umlaute.html">http://user.cs.tu-berlin.de/~eserte/FreeBSD/doc/umlaute/umlaute.html</uri> 里找到。</para>
    </sect2>

    <sect2>
      <title>希腊语本地化</title>

      <indexterm>
	<primary>localization</primary>
	<secondary>Greek</secondary>
      </indexterm>
      <para>Nikos Kokkalis <email>nickkokkalis@gmail.com</email> 撰写了关于在 &os; 上支持希腊语的完整文章，
          可用在 <link xlink:href="&url.doc.base;/el_GR.ISO8859-7/articles/greek-language-support/index.html"> 上找到。</link> ，这个文章是 &os; 希腊官方文档的一部分。</para>
    </sect2>

    <sect2>
      <title>日语和韩语本地化</title>

      <indexterm>
	<primary>localization</primary>
	<secondary>Japanese</secondary>
      </indexterm>
      <indexterm>
	<primary>localization</primary>
	<secondary>Korean</secondary>
      </indexterm>
      <para>日语本地化请参考	<uri xlink:href="http://www.jp.FreeBSD.org/">http://www.jp.FreeBSD.org/</uri> ，
          韩语参考 <uri xlink:href="http://www.kr.FreeBSD.org/">http://www.kr.FreeBSD.org/</uri> 。</para>
    </sect2>

    <sect2>
      <title>非英语的 &os; 文档</title>

      <para>一些 &os; 的贡献者已经将部分 &os; 文档翻译成了其他语言。
          您可在 <link xlink:href="&url.base;/index.html">主站</link> 以及 <filename>/usr/share/doc</filename> 中找到。</para>
    </sect2>
  </sect1>
</chapter>
